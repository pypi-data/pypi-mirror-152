# coding: utf-8

"""
    Welcome to the Atera API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from atera_client.configuration import Configuration


class ContactQueryDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "end_user_id": "int",
        "customer_id": "int",
        "customer_name": "str",
        "firstname": "str",
        "lastname": "str",
        "job_title": "str",
        "email": "str",
        "phone": "str",
        "mobile_phone": "str",
        "is_contact_person": "bool",
        "in_ignore_mode": "bool",
        "created_on": "datetime",
        "last_modified": "datetime",
    }

    attribute_map = {
        "end_user_id": "EndUserID",
        "customer_id": "CustomerID",
        "customer_name": "CustomerName",
        "firstname": "Firstname",
        "lastname": "Lastname",
        "job_title": "JobTitle",
        "email": "Email",
        "phone": "Phone",
        "mobile_phone": "MobilePhone",
        "is_contact_person": "IsContactPerson",
        "in_ignore_mode": "InIgnoreMode",
        "created_on": "CreatedOn",
        "last_modified": "LastModified",
    }

    def __init__(
        self,
        end_user_id=None,
        customer_id=None,
        customer_name=None,
        firstname=None,
        lastname=None,
        job_title=None,
        email=None,
        phone=None,
        mobile_phone=None,
        is_contact_person=None,
        in_ignore_mode=None,
        created_on=None,
        last_modified=None,
        _configuration=None,
    ):  # noqa: E501
        """ContactQueryDTO - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._end_user_id = None
        self._customer_id = None
        self._customer_name = None
        self._firstname = None
        self._lastname = None
        self._job_title = None
        self._email = None
        self._phone = None
        self._mobile_phone = None
        self._is_contact_person = None
        self._in_ignore_mode = None
        self._created_on = None
        self._last_modified = None
        self.discriminator = None

        if end_user_id is not None:
            self.end_user_id = end_user_id
        if customer_id is not None:
            self.customer_id = customer_id
        if customer_name is not None:
            self.customer_name = customer_name
        if firstname is not None:
            self.firstname = firstname
        if lastname is not None:
            self.lastname = lastname
        if job_title is not None:
            self.job_title = job_title
        if email is not None:
            self.email = email
        if phone is not None:
            self.phone = phone
        if mobile_phone is not None:
            self.mobile_phone = mobile_phone
        if is_contact_person is not None:
            self.is_contact_person = is_contact_person
        if in_ignore_mode is not None:
            self.in_ignore_mode = in_ignore_mode
        if created_on is not None:
            self.created_on = created_on
        if last_modified is not None:
            self.last_modified = last_modified

    @property
    def end_user_id(self):
        """Gets the end_user_id of this ContactQueryDTO.  # noqa: E501


        :return: The end_user_id of this ContactQueryDTO.  # noqa: E501
        :rtype: int
        """
        return self._end_user_id

    @end_user_id.setter
    def end_user_id(self, end_user_id):
        """Sets the end_user_id of this ContactQueryDTO.


        :param end_user_id: The end_user_id of this ContactQueryDTO.  # noqa: E501
        :type: int
        """

        self._end_user_id = end_user_id

    @property
    def customer_id(self):
        """Gets the customer_id of this ContactQueryDTO.  # noqa: E501


        :return: The customer_id of this ContactQueryDTO.  # noqa: E501
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this ContactQueryDTO.


        :param customer_id: The customer_id of this ContactQueryDTO.  # noqa: E501
        :type: int
        """

        self._customer_id = customer_id

    @property
    def customer_name(self):
        """Gets the customer_name of this ContactQueryDTO.  # noqa: E501


        :return: The customer_name of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name):
        """Sets the customer_name of this ContactQueryDTO.


        :param customer_name: The customer_name of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._customer_name = customer_name

    @property
    def firstname(self):
        """Gets the firstname of this ContactQueryDTO.  # noqa: E501


        :return: The firstname of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname):
        """Sets the firstname of this ContactQueryDTO.


        :param firstname: The firstname of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._firstname = firstname

    @property
    def lastname(self):
        """Gets the lastname of this ContactQueryDTO.  # noqa: E501


        :return: The lastname of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname):
        """Sets the lastname of this ContactQueryDTO.


        :param lastname: The lastname of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._lastname = lastname

    @property
    def job_title(self):
        """Gets the job_title of this ContactQueryDTO.  # noqa: E501


        :return: The job_title of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this ContactQueryDTO.


        :param job_title: The job_title of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._job_title = job_title

    @property
    def email(self):
        """Gets the email of this ContactQueryDTO.  # noqa: E501


        :return: The email of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ContactQueryDTO.


        :param email: The email of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def phone(self):
        """Gets the phone of this ContactQueryDTO.  # noqa: E501


        :return: The phone of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ContactQueryDTO.


        :param phone: The phone of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def mobile_phone(self):
        """Gets the mobile_phone of this ContactQueryDTO.  # noqa: E501


        :return: The mobile_phone of this ContactQueryDTO.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone

    @mobile_phone.setter
    def mobile_phone(self, mobile_phone):
        """Sets the mobile_phone of this ContactQueryDTO.


        :param mobile_phone: The mobile_phone of this ContactQueryDTO.  # noqa: E501
        :type: str
        """

        self._mobile_phone = mobile_phone

    @property
    def is_contact_person(self):
        """Gets the is_contact_person of this ContactQueryDTO.  # noqa: E501


        :return: The is_contact_person of this ContactQueryDTO.  # noqa: E501
        :rtype: bool
        """
        return self._is_contact_person

    @is_contact_person.setter
    def is_contact_person(self, is_contact_person):
        """Sets the is_contact_person of this ContactQueryDTO.


        :param is_contact_person: The is_contact_person of this ContactQueryDTO.  # noqa: E501
        :type: bool
        """

        self._is_contact_person = is_contact_person

    @property
    def in_ignore_mode(self):
        """Gets the in_ignore_mode of this ContactQueryDTO.  # noqa: E501


        :return: The in_ignore_mode of this ContactQueryDTO.  # noqa: E501
        :rtype: bool
        """
        return self._in_ignore_mode

    @in_ignore_mode.setter
    def in_ignore_mode(self, in_ignore_mode):
        """Sets the in_ignore_mode of this ContactQueryDTO.


        :param in_ignore_mode: The in_ignore_mode of this ContactQueryDTO.  # noqa: E501
        :type: bool
        """

        self._in_ignore_mode = in_ignore_mode

    @property
    def created_on(self):
        """Gets the created_on of this ContactQueryDTO.  # noqa: E501


        :return: The created_on of this ContactQueryDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this ContactQueryDTO.


        :param created_on: The created_on of this ContactQueryDTO.  # noqa: E501
        :type: datetime
        """

        self._created_on = created_on

    @property
    def last_modified(self):
        """Gets the last_modified of this ContactQueryDTO.  # noqa: E501


        :return: The last_modified of this ContactQueryDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this ContactQueryDTO.


        :param last_modified: The last_modified of this ContactQueryDTO.  # noqa: E501
        :type: datetime
        """

        self._last_modified = last_modified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict()) if hasattr(item[1], "to_dict") else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(ContactQueryDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContactQueryDTO):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ContactQueryDTO):
            return True

        return self.to_dict() != other.to_dict()
