[tool.poetry]
name = "ce-bnch-sdk"
version = "2.2.0b0"   # NOTE: This version number is ignored and does not correspond to releases (see README)
description = "SDK for interacting with the Benchling Platform."
authors = ["Benchling Customer Engineering <ce-team@benchling.com>"]
packages = [{include = "benchling_sdk"}]
include = [
    "LICENSE", "benchling_sdk/py.typed"
]
license = "Apache-2.0"
readme = "README.md"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.poetry.dependencies]
python = "^3.7"
backoff = "^1.10.0"
typing-extensions = ">=3.7.4, <5.0"
PyYAML = "^5.4.1"
typer = { version = "^0.4.0", optional = true }
httpx = ">=0.15.0, <=0.22.0"
attrs = ">=20.1.0, <=22.0"
python-dateutil = "^2.8.0"
black = { version = "^22.3.0", optional = true }
Jinja2 = { version = "^3.1.0", optional = true }
autoflake = { version = "^1.4", optional = true }
benchling-api-client = "1.1.0a18"

[tool.poetry.dev-dependencies]
isort = "^5.1.4"
pre-commit = "^2.6.0"
ipython = "^7.16.1"
flake8 = "^3.8.3"
taskipy = "^1.6.0"
parameterized = "^0.8.1"
Jinja2 = "^3.0.0"
toml = "^0.10.2"
packaging = "^20.9"
coverage = "^5.5"
pyfakefs = "^4.4.0"
flake8-docstrings = "^1.6.0"
ddt = "1.4.4"
mypy = "^0.941"
types-PyYAML = "^6.0.4"
respx = ">=0.15"
pytest = "^7.1.1"

[tool.poetry.extras]
app-scaffold = ['black', 'Jinja2', 'typer', 'autoflake']

[tool.poetry.scripts]
benchling-sdk = 'benchling_sdk.cli:cli'

[tool.taskipy.tasks]
unit = "python3 -m pytest -s tests/unit/"
integration = "python3 -m pytest -s tests/integration/"
models = "task generate_models && task sort_models && task format_models"
generate_models = "python3 -m regenerate_models"
format_models = "black benchling_sdk/models/__init__.py"
sort_models = "isort benchling_sdk/models/__init__.py"

[tool.black]
line-length=110

[tool.isort]
combine_as_imports=true
default_section="THIRDPARTY"
force_alphabetical_sort_within_sections=true
force_sort_within_sections=true
include_trailing_comma=true
known_first_party=["benchling_sdk"]
known_third_party=["attr", "autoflake", "backoff", "black", "dataclasses_json", "ddt", "httpx", "jinja2", "parameterized", "pyfakefs", "respx", "typer", "typing_extensions", "yaml"]
line_length=110
multi_line_output=3
order_by_type=false
skip=["vendor"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
