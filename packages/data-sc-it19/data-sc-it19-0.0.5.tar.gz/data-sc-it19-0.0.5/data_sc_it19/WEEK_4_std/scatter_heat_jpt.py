{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f931c95b",
   "metadata": {},
   "source": [
    "# Matplotlib Scatter"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3403a65",
   "metadata": {},
   "source": [
    "### Scatter plots are widely used to represent relation among variables and how change in one affects the other. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edbd793d",
   "metadata": {},
   "source": [
    "## scatter() function is used to draw a scatter plot with Pyplot. \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "062d58be",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "5ea3ee2b",
   "metadata": {},
   "source": [
    "## <blockquote>Creating Scatter Plots</blockquote>\n",
    "#### `scatter()` function plots one dot for each observation. It needs 2 arrays of the same length, one for the values of the x-axis, and the other one for values on the y-axis.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e130053b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n",
    "\n",
    "\n",
    "y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n",
    "\n",
    "plt.plot(x,y,\"o\" );\n",
    "##ORR \n",
    "plt.scatter(x,y,);\n",
    "\n",
    "##In this case, you had to include the marker \"o\" as a third argument, as otherwise plt.plot() would plot a line graph. The plot you created with this code is identical to the plot you created earlier with plt.scatter().\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1aa30ca3",
   "metadata": {},
   "source": [
    "### The observation in the example above is the result of 13 cars passing by.\n",
    "\n",
    "The X-axis shows how old the car is.\n",
    "\n",
    "The Y-axis shows the speed of the car when it passes.\n",
    "\n",
    "Are there any relationships between the observations?\n",
    "\n",
    "It seems that the newer the car, the faster it drives, but that could be a coincidence, after all we only registered 13 cars.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f8ff325",
   "metadata": {},
   "source": [
    "## Customizing Markers in Scatter Plots\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c05206ef",
   "metadata": {},
   "source": [
    "### We can visualize more then 2 variables on 2-dimensional scatter plot by customizing the markers. There are 4 main features of the markers used in a scatter plot that we can customize with plt.scatter():\n",
    "\n",
    "#### 1.Color\n",
    "#### 2.Size\n",
    "#### 3.Shape\n",
    "#### 4.Transparency"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c52f653d",
   "metadata": {},
   "source": [
    "## <blockquote>Color</blockquote>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8379fefa",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "d687d8dc",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1eba34fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAWZUlEQVR4nO3df2xd93nf8fcjcdykaGoti/Yc0SmdgNESua0TkEKSwkRWp6iQGXISwIHTJTBaN26HtMnS/ajTAvMwIIO7uW2GDc2gJK6NNXZiOO4stJkWQ9tCtWgi0U4TmfE0prGqUNYsKvSiqRHMUHr2xz1XImlS4v1BnnvPfb8A4fI899zD54pXHx1+v997T2QmkqRq2VB2A5Kk9jPcJamCDHdJqiDDXZIqyHCXpArqK7sBgO3bt+fQ0FDZbUhSV3nmmWfOZObAcvd1RLgPDQ0xMTFRdhuS1FUi4q9Xus9hGUmqIMNdkirIcJekCjLcJamCDHdJqqCOWC2jlU2emWJ8+ghn586xtX8LY4Oj7No+XHZbkjqc4d7BJs9MceD4IeYvzgNwdu4cB44fAjDgJV2RwzIdbHz6yKVgr5u/OM/49JGSOpLULQz3DnZ27lxDdUmqM9w72Nb+LQ3VJanOcO9gY4Oj9G1YPC3St6GPscHRkjqS1C2cUK07fBL2H4PZ87BtE+zdCbt3lNpSfdLU1TKSGmW4Qy3YHz0Kcxdq27Pna9vQEQFvmEtqlMMyUDtjrwd73dyFWl2SupDhDrUz9UbqktThDHeojbE3UpekDnfVcI+IhyLidEQ8t6B2Z0RMRsTFiBhZsv8nIuI7EXEsIn5+LZpuu707oX/j4lr/xlpdkrrQas7cHwb2LKk9B7wPGF9YjIg3A3cBu4rH/EFELEnNDrR7B/zCT14+U9+2qbZd8mSqJDXrqqtlMnM8IoaW1J4HiIilu98BfCEzXwFeiIjvALuBv2hLt2tp9w7DXFJltHvMfQfwvQXb00VNkrSO2h3urzqVB3LZHSPujYiJiJiYmZlpcxuS1NvaHe7TwI0LtgeBF5fbMTP3ZeZIZo4MDAy0uQ1J6m3tDvf9wF0R8bcj4iZgGDjc5u8hSbqKq06oRsRjwDuB7RExDdwPzAL/ARgA/jQi/jIzfz4zJyPiceDbwDzwkcy8sMKhJUlrZDWrZT6wwl1/vML+nwQ+2UpTkqTW+A5VSaogw12SKshwl6QKMtwlqYIMd0mqIMNdkirIcJekCjLcJamCDHdJqiDDXZIqyHCXpAoy3CWpggx3Saogw12SKshwl6QKMtwlqYIMd0mqIMNdkirIcJekCjLcJamCrnqB7Ih4CLgdOJ2ZNxe1bcAXgSHgOPD+zHw5IoaA54FjxcO/lpm/2v62aybPTDE+fYSzc+fY2r+FscFRdm0fLv1YklS21Zy5PwzsWVK7DziYmcPAwWK77q8y85biz5oG+4Hjhzg7dw6As3PnOHD8EJNnpko9liR1gquGe2aOA7NLyncAjxRfPwK8p71tXd349BHmL84vqs1fnGd8+kipx5KkTtDsmPv1mXkKoLi9bsF9N0XENyLiqxFx60oHiIh7I2IiIiZmZmYabqB+lr3a+nodS5I6QbsnVE8Br8vMtwC/ATwaEVuX2zEz92XmSGaODAwMNPyNtvZvaai+XseSpE7QbLi/FBE3ABS3pwEy85XM/H7x9TPAXwFvbEejS40NjtK3YfF8cN+GPsYGR0s9liR1gmbDfT9wd/H13cBTABExEBEbi69fDwwD3221yeXs2j7MnqFbL51db+3fwp6hW5ta4dLOY0lSJ1jNUsjHgHcC2yNiGrgfeAB4PCLuAU4Adxa7jwH/OiLmgQvAr2bm0snYttm1fbhtAdzOY0lS2a4a7pn5gRXuum2Zfb8EfKnVpiRJrfEdqpJUQYa7JFXQVYdlesbhk7D/GMyeh22bYO9O2L2j7K4kqSmGO9SC/dGjMHehtj17vrYNBrykruSwDNTO2OvBXjd3oVaXpC5kuEPtTL2RuiR1OMMdamPsjdQlqcMZ7lCbPO3fuLjWv7FWl6Qu5IQqXJ40dbWMpIow3Ot27zDMJVWGwzKSVEGGuyRVkOEuSRVkuEtSBRnuklRBhrskVZDhLkkVZLhLUgUZ7pJUQau5QPZDwO3A6cy8uahtA74IDAHHgfdn5svFfZ8A7qF2geyPZuZ/W5PO22zyzBTj00c4O3eOrf1bGBscbfqC2e08liQ1YzVn7g8De5bU7gMOZuYwcLDYJiLeDNwF7Coe8wcRseQTuTrP5JkpDhw/xNm5cwCcnTvHgeOHmDwzVeqxJKlZVw33zBwHZpeU7wAeKb5+BHjPgvoXMvOVzHwB+A6wuz2trp3x6SPMX5xfVJu/OM/49JFSjyVJzWp2zP36zDwFUNxeV9R3AN9bsN90UXuViLg3IiYiYmJmZqbJNtqjfpa92vp6HUuSmtXuCdVYppbL7ZiZ+zJzJDNHBgYG2txGY7b2b2movl7HkqRmNRvuL0XEDQDF7emiPg3cuGC/QeDF5ttbH2ODo/RtWDy33Lehj7HB0VKPJUnNavbz3PcDdwMPFLdPLag/GhG/B7wWGAYOt9rkWquvZGnHCpd2HqvtDp+s/AVJXKkk1axmKeRjwDuB7RExDdxPLdQfj4h7gBPAnQCZORkRjwPfBuaBj2TmhTXqva12bR9uWwi081htc/gkPHoU5oofx+z52jZUJuDrK5XqE9r1lUpA5/08pDV21XDPzA+scNdtK+z/SeCTrTSlNbD/2OVgr5u7UKtXJNyvtFLJcFev8R2qvWL2fGP1LuRKJekyw71XbNvUWL0LuVJJusxw7xV7d0L/kjcL92+s1SvClUrSZc2ullG3qY+rV3i1TEevVJLWmeHeS3bvqFSYL6cjVypJJXBYRpIqyHCXpAoy3CWpggx3Saogw12SKshwl6QKMtwlqYIMd0mqIMNdkirIcJekCjLcJamCDHdJqiDDXZIqyHCXpApq6SN/I+JjwIeBAD6TmZ+KiH9V1GaK3X4rM7/cUpdSCSbPTPnZ8OpaTYd7RNxMLcR3A3PAgYj40+Lu38/MB9vQn1SKyTNTHDh+6NIFt8/OnePA8UMABry6QivDMm8CvpaZP8zMeeCrwHvb05ZUrvHpI5eCvW7+4jzj00dK6khqTCvh/hwwFhHXRsRm4N3AjcV9vxYR34qIhyLimuUeHBH3RsREREzMzMwst4tUmrNz5xqqS52m6XDPzOeB3wGeBg4A3wTmgU8DbwBuAU4Bv7vC4/dl5khmjgwMDDTbhrQmtvZvaagudZqWVstk5ucy862ZOQbMAlOZ+VJmXsjMi8BnqI3JS11lbHCUvg2Lp6T6NvQxNjhaUkdSY1pdLXNdZp6OiNcB7wPeHhE3ZOapYpf3Uhu+UbMOn4T9x2D2PGzbBHt3Vu4i1524KqX+/TutL2m1Wgp34EsRcS3wI+AjmflyRPzniLgFSOA48Cstfo/edfgkPHoU5i7UtmfP17ahMgHfyatSdm0fLr0HqVkthXtm3rpM7UOtHFML7D92Odjr5i7U6hUJ9yutSjFYpeb5DtVONnu+sXoXclWKtDYM9062bVNj9S7kqhRpbRjunWzvTujfuLjWv7FWrwhXpUhro9UJVa2l+rh6hVfLuCpFWhuGe6fbvaNSYb4cV6VI7eewjCRVkOEuSRVkuEtSBRnuklRBhrskVZDhLkkVZLhLUgUZ7pJUQYa7JFWQ71BV6TrxYh1StzPcVapOvliH1M0cllGprnSxDknNM9xVKi/WIa0Nw12l8mId0tpoacw9Ij4GfBgI4DOZ+amI2AZ8ERiidoHs92fmyy32qYoaGxxdNOYOXqxjPfXCZHYvPMflNH3mHhE3Uwv23cBPA7dHxDBwH3AwM4eBg8W2tKxd24fZM3TrpTP1rf1b2DN0a0/84ytbfTK7PgRWn8yePDNVcmft0wvPcSWtnLm/CfhaZv4QICK+CrwXuAN4Z7HPI8D/BH6zhe+jivNiHeW40mR2VX4evfAcV9LKmPtzwFhEXBsRm4F3AzcC12fmKYDi9rrlHhwR90bERERMzMzMtNCGpGb0wmR2LzzHlTQd7pn5PPA7wNPAAeCbwPwVH7T48fsycyQzRwYGBpptQ1KTemEyuxee40paWi2TmZ/LzLdm5hgwC0wBL0XEDQDF7enW25TUbmODo/RtWDwyW7XJ7F54jitpdbXMdZl5OiJeB7wPeDtwE3A38EBx+1TLXUpqu/qYc5VXkvTCc1xJZGbzD444BFwL/Aj4jcw8GBHXAo8DrwNOAHdm5uyVjjMyMpITExNN9yFJvSginsnMkeXua+nMPTNvXab2feC2Vo4rSWqN71CVpAoy3CWpggx3SaogP89d5Tt8EvYfg9nzsG0T7N0Ju3eU3ZXU1Qx3levwSXj0KMxdqG3Pnq9tgwEvtcBhGZVr/7HLwV43d6FWl9Q0w13lmj3fWF3SqhjuKte2TY3VJa2KY+4q196di8fcAfo31urNaOfkrBO96mKGu8pVD8t2hGg7J2ed6FWXM9xVvt072hOYV5qcbfT47TyWVALH3FUd7ZycdaJXXc5wV3W0c3LWiV51OcNd1bF3Z20ydqFmJ2fbeSypBI65qzmduCqlnZOz7TyWtJw1Xo1luKtxnbwqpV2Ts+0+lrTQOqzGclhGjWvnRwb48QPqRevwujfc1ThXpUitWYfXveGuxrkqRWrNOrzuDXc1zlUpUmvW4XXf0oRqRHwc+GUggaPALwL3AR8GZordfiszv9zK91GH6ZVVKT3w2TKTZ6YYnz7C2blzbO3fwtjgKLu2D5fdVvWtw+s+MrO5B0bsAP4MeHNmno+Ix4EvA0PAucx8cLXHGhkZyYmJiab6kNbE0tUMUDuz+oWfrEzAT56Z4sDxQ8xfnL9U69vQx56hWw34LhERz2TmyHL3tTos0wdsiog+YDPwYovHkzpDD6ziGZ8+sijYAeYvzjM+faSkjtROTYd7Zp4EHgROAKeAH2TmV4q7fy0ivhURD0XENcs9PiLujYiJiJiYmZlZbhepPD2wiufs3LmG6uouTYd7Edp3ADcBrwVeExEfBD4NvAG4hVro/+5yj8/MfZk5kpkjAwMDzbYhrY0eWMWztX9LQ3V1l1YmVN8FvJCZMwAR8STwjsz8o/oOEfEZ4E9aa1FavbZNELb7IiIdaGxwdNkx97HB0RK7Uru0Eu4ngLdFxGbgPHAbMBERN2TmqWKf9wLPtdijtCpLJwjPzp3jwPFDAI0HfCev4mmT+t+Jq2Wqqelwz8yvR8QTwLPAPPANYB/w2Yi4hdryyOPAr7TepnR1V5ogbCqweuCzZXZtHzbMK6qlde6ZeT9w/5Lyh1o5ptQsJwily3yHqirDCULpMsNdlTE2OErfhsW/jDpBqF7l57mrMpwglC4z3FUpThBKNQ7LSFIFGe6SVEGGuyRVkOEuSRVkuEtSBRnuklRBhrskVZDhLkkVZLhLUgUZ7pJUQYa7JFWQ4S5JFWS4S1IFGe6SVEGGuyRVUEuf5x4RHwd+mdrFsI8CvwhsBr4IDFG7QPb7M/PllrqU1FMmz0x50ZUWNX3mHhE7gI8CI5l5M7ARuAu4DziYmcPAwWJbklZl8swUB44funRh87Nz5zhw/BCTZ6ZK7qy7tDos0wdsiog+amfsLwJ3AI8U9z8CvKfF7yGph4xPH2H+4vyi2vzFecanj5TUUXdqOtwz8yTwIHACOAX8IDO/AlyfmaeKfU4B1y33+Ii4NyImImJiZmam2TYkVUz9jH21dS2vlWGZa6idpd8EvBZ4TUR8cLWPz8x9mTmSmSMDAwPNtiGpYrb2b2moruW1MizzLuCFzJzJzB8BTwLvAF6KiBsAitvTrbcpqVeMDY7St2HxWo++DX2MDY6W1FF3amW1zAngbRGxGTgP3AZMAH8D3A08UNw+1WqTki6r+kqS+nOp8nNcD02He2Z+PSKeAJ4F5oFvAPuALcDjEXEPtf8A7mxHo5IurySpTzjWV5IAlQq/XduHK/V8ytDSOvfMvB+4f0n5FWpn8ZLa7EorSQxDLeQ7VKUu4koSrZbhLnURV5JotQx3qYuMDY7Sx8ZFtT42upJEr2K4S11k13c3s+fPf4yt5zZCwtZzG9nz5z/Gru9uLrs1dZiWJlQlrbP9x9g1u4ldU5sW179/DHbvKKcndSTP3KVuMnu+sbp6luEudZNtmxqrq2cZ7lI32bsT+hdPqNK/sVaXFnDMXeom9XH1/cdqQzHbNtWCvdnx9sMn23csdRTDXeo2u3e0J4APn4RHj8Lchdr27Pnadv17qKs5LCP1qv3HLgd73dyFWl1dz3CXepUrbyrNcJd6lStvKs1wl3qVK28qzQlVqVe1e+WNOorhLvWydq28UcdxWEaSKshwl6QKMtwlqYIMd0mqIMNdkiooMrPsHoiIGeCvy+6jsB04U3YTy7CvxthXY+yrMZ3S109k5sByd3REuHeSiJjIzJGy+1jKvhpjX42xr8Z0al8LOSwjSRVkuEtSBRnur7av7AZWYF+Nsa/G2FdjOrWvSxxzl6QK8sxdkirIcJekCjLcgYi4MSL+R0Q8HxGTEfGxsntaKCI2RsQ3IuJPyu6lLiJ+PCKeiIj/Vfy9vb3sngAi4uPFz/C5iHgsIv5OSX08FBGnI+K5BbVtEfF0REwVt9d0UG//rvhZfisi/jgifrwT+lpw3z+LiIyI7Z3SV0T8ekQcK15v/3a9+7oaw71mHvinmfkm4G3ARyLizSX3tNDHgOfLbmKJfw8cyMy/D/w0HdBfROwAPgqMZObNwEbgrpLaeRjYs6R2H3AwM4eBg8V2GR7m1b09DdycmT8F/G/gE+vdFMv3RUTcCPwccGK9Gyo8zJK+IuIfAHcAP5WZu4AHS+jrigx3IDNPZeazxdf/j1pQdcSHXEfEIPAPgc+W3UtdRGwFxoDPAWTmXGb+31KbuqwP2BQRfcBm4MUymsjMcWB2SfkO4JHi60eA96xnT3XL9ZaZX8nM+WLza8BgJ/RV+H3gXwClrP5Yoa9/DDyQma8U+5xe98auwnBfIiKGgLcAXy+5lbpPUXthXyy5j4VeD8wAf1gMF302Il5TdlOZeZLaGdQJ4BTwg8z8SrldLXJ9Zp6C2gkFcF3J/azkl4D/WnYTABGxFziZmd8su5cl3gjcGhFfj4ivRsRo2Q0tZbgvEBFbgC8B/yQzz3ZAP7cDpzPzmbJ7WaIPeCvw6cx8C/A3lDfEcEkxhn0HcBPwWuA1EfHBcrvqLhHx29SGKT/fAb1sBn4b+Jdl97KMPuAaasO4/xx4PCKi3JYWM9wLEfG3qAX75zPzybL7KfwMsDcijgNfAH42Iv6o3JYAmAamM7P+280T1MK+bO8CXsjMmcz8EfAk8I6Se1ropYi4AaC47ahf5SPibuB24B9lZ7wB5g3U/qP+ZvFvYBB4NiL+Xqld1UwDT2bNYWq/Wa/7ZO+VGO5A8T/u54DnM/P3yu6nLjM/kZmDmTlEbWLwv2dm6Weimfl/gO9FxM6idBvw7RJbqjsBvC0iNhc/09vogIneBfYDdxdf3w08VWIvi0TEHuA3gb2Z+cOy+wHIzKOZeV1mDhX/BqaBtxavv7L9F+BnASLijUA/nfEpkZcY7jU/A3yI2pnxXxZ/3l12Ux3u14HPR8S3gFuAf1NuO1D8JvEE8CxwlNrru5S3iUfEY8BfADsjYjoi7gEeAH4uIqaorf54oIN6+4/A3wWeLl7//6lD+irdCn09BLy+WB75BeDuDvlt5xI/fkCSKsgzd0mqIMNdkirIcJekCjLcJamCDHdJqiDDXZIqyHCXpAr6/5S+rA10rXSwAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n",
    "y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n",
    "plt.scatter(x, y, color = 'hotpink')\n",
    "\n",
    "\n",
    "### hex color\n",
    "x = np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])\n",
    "y = np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])\n",
    "plt.scatter(x, y, color = '#88c999')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a972ff1",
   "metadata": {},
   "source": [
    "## `Coloring each dot`\n",
    "\n",
    "### You can set a specific color for each dot by using an array of colors as value for the `c` argument:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9e16bb10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n",
    "y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n",
    "colors = np.array([\"red\",\"green\",\"blue\",\"yellow\",\"pink\",\"black\",\"orange\",\"purple\",\"beige\",\"brown\",\"gray\",\"cyan\",\"magenta\"])\n",
    "\n",
    "plt.scatter(x, y, c=colors)\n",
    "\n",
    "plt.show()\n",
    "\n",
    "\n",
    "## You cannot use the color argument for this, only c argument"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7280520",
   "metadata": {},
   "source": [
    "## Size\n",
    "### You can change the size of the dots with the `s` argument. \n",
    "#### Make sure the array of sizes has the same length as the arrays of x- and y-axis."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce543e2c",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "68f36600",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n",
    "y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n",
    "sizes = np.array([20,50,10,200,400,100,60,90,10,300,60,80,75])\n",
    "colors = np.array([\"red\",\"green\",\"blue\",\"yellow\",\"pink\",\"black\",\"orange\",\"purple\",\"beige\",\"brown\",\"gray\",\"cyan\",\"magenta\"])\n",
    "\n",
    "plt.scatter(x, y, s=sizes, c = colors)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9035f2c1",
   "metadata": {},
   "source": [
    "# Shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fbc7248d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAVx0lEQVR4nO3df2xV933G8ffj6+Dgxs2g3PyApDOtoGsbzbRyUWFr1JaSRlkHaSWiTOtiadGyTen6Y063oEprNWlLtsK6aVNbsTUL2Toq8mOLtR8RiG3JH6ElTopT0qzQDo8SSGzGxmAEE19/9odPNNtcYvA5l3Puuc9Lss6933vu8QP2fXx8zvceKyIwM7Nyacs7gJmZZc/lbmZWQi53M7MScrmbmZWQy93MrITa8w4AsGjRouju7s47hplZU3n22WePRUS13mOFKPfu7m4GBwfzjmFm1lQk/cf5HvNhGTOzEnK5m5mVkMvdzKyESlHuL584k3cEM7NCafpy33PwOKvu28Uzw8fzjmJmVhhNXe7jtQn6Hx4igP7tQ4zXJvKOZGZWCE1d7lufHubYqTEAjp0a46Hdw/kGMjMriKYt95GTZ9i8cz+vnq0BcPpsjU079jN6ciznZGZm+Wvach/Ye4TaxPRr0dcmgoGhIzklMjMrjqYt9/UrllBp07SxSptY17M4p0RmZsXRtOVe7eqgf+1y5s+rANB5WYV7blpOtasj52RmZvmbtdwlPSBpRNK+KWMbJL0gaUJS74z1N0r6oaQfSPpoI0K/rm91N9UrJst8UVcHd6zqbuSnMzNrGhey5/4gcPOMsX3AJ4Cnpg5KehdwO/Du5DlflVRJH7O+9kobmzb0IGDzbT20V5r2FxEzs0zNelXIiHhKUveMsRcBJM1cfT3wrYgYAw5K+iGwEtidSdo6Vi5dyO6Na7jmyssb9SnMzJpO1ru6S4AfT7l/OBk7h6S7JA1KGhwdHU31SV3sZmbTZV3u5+zKA1FnjIjYEhG9EdFbrda91ryZmc1R1uV+GLh+yv3rAE88NzO7xLIu9wHgdkkdkpYCy4A9GX8OMzObxawnVCVtAz4ILJJ0GPgicBz4U6AK/IOkvRHx0Yh4QdJ24PvAOHB3RNQalt7MzOq6kNkyv3Ceh/72POv/HvB7aUKZmVk6nhhuZlZCLnczsxJyuZuZlZDL3cyshFzuZmYl5HI3Myshl7uZWQm53M3MSsjlbmZWQi53M7MScrmbmZWQy93MrIRc7mZmJeRyNzMrIZe7mVkJudzNzErI5W5mVkIudzOzEnK5m5mVkMvdzKyEZi13SQ9IGpG0b8rYQkk7JR1IlguS8W5Jr0ram3x8vZHhzcysvgvZc38QuHnG2L3ArohYBuxK7r/uRxGxIvn4tWximpnZxZi13CPiKeD4jOH1wNbk9lbg1mxjmZlZGnM95n51RBwFSJZXTXlsqaTvSnpS0gfOtwFJd0kalDQ4Ojo6xxhmZlZP1idUjwJvjYj3AL8J/I2kN9dbMSK2RERvRPRWq9WMY5iZtba5lvsrkq4FSJYjABExFhH/mdx+FvgRsDyLoGZmduHmWu4DQF9yuw94HEBSVVIluf02YBnw72lDmpnZxWmfbQVJ24APAoskHQa+CNwPbJd0J3AI2JCsfiPwu5LGgRrwaxEx82SsmZk12KzlHhG/cJ6H1tRZ91Hg0bShzMwsHb9D1cyshEpR7i+fOJN3BDOzQmn6ct9z8Dir7tvFM8M+tG9m9rqmLvfx2gT9Dw8RQP/2IcZrE3lHMjMrhKYu961PD3Ps1BgAx06N8dDu4XwDmZkVRNOW+8jJM2zeuZ9Xz9YAOH22xqYd+xk9OZZzMjOz/DVtuQ/sPUJtIqaN1SaCgaEjOSUyMyuOpi339SuWUGnTtLFKm1jXszinRGZmxdG05V7t6qB/7XLmz6sA0HlZhXtuWk61qyPnZGZm+WvacgfoW91N9YrJMl/U1cEdq7rzDWRmVhBNXe7tlTY2behBwObbemivNPU/x8wsM7NeW6boVi5dyO6Na7jmysvzjmJmVhil2NV1sZuZTVeKcjczs+lc7mZmJeRyNzMrIZe7mVkJudzNzErI5W5mVkIudzOzEpq13CU9IGlE0r4pYwsl7ZR0IFkumPLYRkk/lPQDSR9tVHAzMzu/C9lzfxC4ecbYvcCuiFgG7EruI+ldwO3Au5PnfFVSJbO0ZmZ2QWYt94h4Cpj5B0rXA1uT21uBW6eMfysixiLiIPBDYGU2Uc3M7ELN9Zj71RFxFCBZXpWMLwF+PGW9w8nYOSTdJWlQ0uDo6OgcY5iZWT1Zn1BVnbGoM0ZEbImI3ojorVarGccot5dPnMk7gpkV3FzL/RVJ1wIky5Fk/DBw/ZT1rgP8d+8ytOfgcVbdt4tnhmceKTMz+39zLfcBoC+53Qc8PmX8dkkdkpYCy4A96SLa68ZrE/Q/PEQA/duHGK9N5B3JzArqQqZCbgN2A++QdFjSncD9wFpJB4C1yX0i4gVgO/B94Ang7oioNSp8q9n69DDHTo0BcOzUGA/tHs43kJkVliLqHhK/pHp7e2NwcDDvGIU2cvIMH/zyv3L67P//rOycV+HJz3/IfzfWrEVJejYieus95neoNomBvUeoTUz/QVybCAaGfErDzM7lcm8S61csodI2fTJSpU2s61mcUyIzKzKXe5OodnXQv3Y58+dNvuG387IK99y03IdkzKwul3sT6VvdTfWKyTJf1NXBHau68w1kZoXlcm8i7ZU2Nm3oQcDm23por/jLZ2b1tecdwC7OyqUL2b1xDddceXneUcyswLzr14Rc7GY2G5e7mVkJudzNzErI5W5mVkIudzOzEnK5m5mVkMvdzKyEXO5mZiXkcjczKyGXu5lZCbnczcxKyOVuZlZCLnczsxJyuZuZlVCqcpf0GUn7JL0g6bPJ2JckvSRpb/JxSyZJzczsgs35eu6SbgB+BVgJnAWekPQPycNfiYhNGeQzM7M5SPPHOt4JfDsiTgNIehL4eCapzMwslTSHZfYBN0p6i6RO4Bbg+uSxT0l6XtIDkhbUe7KkuyQNShocHR1NEcPMzGaac7lHxIvAHwA7gSeAIWAc+BrwdmAFcBTYfJ7nb4mI3ojorVarc43RFF4+cSbvCGbWYlKdUI2Ib0TEeyPiRuA4cCAiXomIWkRMAH/O5DH5lrXn4HFW3beLZ4aP5x3FzFpI2tkyVyXLtwKfALZJunbKKh9n8vBNSxqvTdD/8BAB9G8fYrw2kXckM2sRaU6oAjwq6S3Aa8DdEfFfkv5K0goggGHgV1N+jqa19elhjp0aA+DYqTEe2j3ML//s23JOZWatIFW5R8QH6oz9UpptlsXIyTNs3rmfV8/WADh9tsamHfv5+Z4lVLs6ck5nZmXnd6g2yMDeI9QmYtpYbSIYGDqSUyIzayUu9wZZv2IJlTZNG6u0iXU9i3NKZGatxOXeINWuDvrXLmf+vAoAnZdVuOem5T4kY2aXhMu9gfpWd1O9YrLMF3V1cMeq7nwDmVnLcLk3UHuljU0behCw+bYe2iv+7zazSyPtVEibxcqlC9m9cQ3XXHl53lHMrIV4V/IScLGb2aXmcjczKyGXu5lZCbnczcxKyOVuZlZCLnczsxJyuZuZlZDL3cyshFzuZmYl5HI3Myshl7uZWQm53M3MSsjlbmZWQi53M7MSSlXukj4jaZ+kFyR9NhlbKGmnpAPJckEmSc3M7ILNudwl3QD8CrAS6AE+JmkZcC+wKyKWAbuS+2Zmdgml2XN/J/DtiDgdEePAk8DHgfXA1mSdrcCtqRKamdlFS1Pu+4AbJb1FUidwC3A9cHVEHAVIllfVe7KkuyQNShocHR1NEcPMzGaac7lHxIvAHwA7gSeAIWD8Ip6/JSJ6I6K3Wq3ONYaZmdWR6oRqRHwjIt4bETcCx4EDwCuSrgVIliPpY5qZ2cVIO1vmqmT5VuATwDZgAOhLVukDHk/zOczM7OK1p3z+o5LeArwG3B0R/yXpfmC7pDuBQ8CGtCHNzOzipCr3iPhAnbH/BNak2a6ZmaXjd6iamZWQy90a4uUTZ/KOYNbSXO6WuT0Hj7Pqvl08M3w87yhmLcvlbpkar03Q//AQAfRvH2K8NpF3JLOW5HK3TG19ephjp8YAOHZqjId2D+cbyKxFudwtMyMnz7B5535ePVsD4PTZGpt27Gf05FjOycxaj8vdMjOw9wi1iZg2VpsIBoaO5JTIrHW53C0z61csodKmaWOVNrGuZ3HqbTdi9o1n9FiZudwtM9WuDvrXLmf+vAoAnZdVuOem5VS7OlJttxGzbzyjx8rO5W6Z6lvdTfWKyTJf1NXBHau6U22vEbNvPKPHWoHL3TLVXmlj04YeBGy+rYf2SrpvsUbMvvGMHmsFLnfL3MqlC9m9cQ3v616YajuNmH3jGT3WKlzu1hDXXHl56m00YvaNZ/RYq3C5G5D9zJEstteI2TeNnNFjNheNmrXlcrfMZ45ktb1GzL5p1Iwes7lo5Kwtl3uLy3rmSNbby3r2TaO2aXaxGj1ry+Xe4rKeOZL19rKefdOobZpdrEbP2lJEzL5Wg/X29sbg4GDeMVrOyMkzfPDL/8rpZOYIQOe8Ck9+/kNzOkyR9famevnEmUxO0jZ6m2YXIqvXiqRnI6K33mPeZWlhWc8caeRMFJewlcmlmLXlcm9hWc8caaaZKL78gOXpUrxWUpW7pM9JekHSPknbJF0u6UuSXpK0N/m4Jauwlq2sZ440y0wUX37A8nYpXitzLndJS4BPA70RcQNQAW5PHv5KRKxIPv4xg5zWIFnPHGmGmSi+/IAVQaNfK2kPy7QD8yW1A52A3+bXZLKeOVL0mSi+/IAVRaNfK3PeWkS8BGwCDgFHgRMRsSN5+FOSnpf0gKQF9Z4v6S5Jg5IGR0dH5xrDMpDVtWAatb0s+fIDViSNfK2kOSyzAFgPLAUWA2+S9Enga8DbgRVMlv7mes+PiC0R0RsRvdVqda4xLCNZz0Yp6uyWZjrpa62hUa+VNL8HfAQ4GBGjEfEa8BiwOiJeiYhaREwAfw6szCKoWRaa5aSvWVppyv0Q8H5JnZIErAFelHTtlHU+DuxLE9Asa81w0tcsrTTH3L8DPAI8B3wv2dYW4A8lfU/S88CHgM9lEdQsK0U/6WuWBV9+wFqWLz9gzc6XHzCrw8VuZeZyNzMrIZe7mVkJudzNzErI5W5mVkIudzOzEnK5m5mVkMvdzKyEXO5mZiXkcjczKyGXu5lZCbnczcxKyOVuZlZCLnczsxJyuZuZlZDL3cyshFzuZmYl5HI3Myshl7uZWQm53M3MSihVuUv6nKQXJO2TtE3S5ZIWStop6UCyXJBVWDMzuzBzLndJS4BPA70RcQNQAW4H7gV2RcQyYFdy38zMLqG0h2XagfmS2oFO4AiwHtiaPL4VuDXl5zAzs4s053KPiJeATcAh4ChwIiJ2AFdHxNFknaPAVfWeL+kuSYOSBkdHR+caw8zM6khzWGYBk3vpS4HFwJskffJCnx8RWyKiNyJ6q9XqXGOYmVkdaQ7LfAQ4GBGjEfEa8BiwGnhF0rUAyXIkfUwzM7sYacr9EPB+SZ2SBKwBXgQGgL5knT7g8XQRzczsYrXP9YkR8R1JjwDPAePAd4EtwBXAdkl3MvkDYEMWQc3M7MLNudwBIuKLwBdnDI8xuRdvZmY58TtUzcxKyOVuVlAvnziTdwRrYi53swLac/A4q+7bxTPDx/OOYk3K5W5WMOO1CfofHiKA/u1DjNcm8o5kTcjlblYwW58e5tipMQCOnRrjod3D+QaypuRyNyuQkZNn2LxzP6+erQFw+myNTTv2M3pyLOdk1mxc7mYFMrD3CLWJmDZWmwgGho7klMialcvdrEDWr1hCpU3TxiptYl3P4tTb9uyb1uJyNyuQalcH/WuXM39eBYDOyyrcc9Nyql0dqbbr2Tetx+VuVjB9q7upXjFZ5ou6OrhjVXeq7Xn2TWtyuZsVTHuljU0behCw+bYe2ivpXqaefdOaXO5mBbRy6UJ2b1zD+7oXptqOZ9+0Lpe7WUFdc+Xlqbfh2Tety+VuVmKNnH1jxeZyNyuxRs2+seJzuZuVXNazb6w5uNzNSi7r2TfWHFL9JSYzaw6vz77J4iStNQf/CDdrES721uJyNzMrIZe7mVkJudzNzEpIETH7Wo0OIY0C/5FiE4uAYxnFaYSi54PiZyx6Pih+xqLnA2e8WD8ZEdV6DxSi3NOSNBgRvXnnOJ+i54PiZyx6Pih+xqLnA2fMkg/LmJmVkMvdzKyEylLuW/IOMIui54PiZyx6Pih+xqLnA2fMTCmOuZuZ2XRl2XM3M7MpXO5mZiXUtOUu6XpJ/yLpRUkvSPpM3pnqkVSR9F1Jf593lnok/YSkRyT9W/J/uSrvTDNJ+lzyNd4naZuk3C+SIukBSSOS9k0ZWyhpp6QDyXJBwfJ9Ofk6Py/pbyX9RF75kjznZJzy2D2SQtKiPLIlGermk/Qbkn6QfE/+YV75ZtO05Q6MA/0R8U7g/cDdkt6Vc6Z6PgO8mHeIN/AnwBMR8VNADwXLKmkJ8GmgNyJuACrA7fmmAuBB4OYZY/cCuyJiGbAruZ+XBzk3307ghoj4aWA/sPFSh5rhQc7NiKTrgbXAoUsdaIYHmZFP0oeA9cBPR8S7gU055LogTVvuEXE0Ip5Lbp9kspSW5JtqOknXAT8H/EXeWeqR9GbgRuAbABFxNiL+O9dQ9bUD8yW1A51A7n8ANCKeAo7PGF4PbE1ubwVuvZSZpqqXLyJ2RMR4cvfbwHWXPNj0PPX+DwG+AvwWkOtsj/Pk+3Xg/ogYS9YZueTBLlDTlvtUkrqB9wDfyTnKTH/M5DfpRM45zudtwCjwl8mho7+Q9Ka8Q00VES8xuXd0CDgKnIiIHfmmOq+rI+IoTO58AFflnOeN/DLwT3mHmEnSOuCliBjKO8t5LAc+IOk7kp6U9L68A51P05e7pCuAR4HPRsT/5J3ndZI+BoxExLN5Z3kD7cB7ga9FxHuA/yXfQwnnSI5brweWAouBN0n6ZL6pmpukLzB5WPObeWeZSlIn8AXgd/LO8gbagQVMHgr+PLBdkt74Kflo6nKXdBmTxf7NiHgs7zwz/AywTtIw8C3gw5L+Ot9I5zgMHI6I13/jeYTJsi+SjwAHI2I0Il4DHgNW55zpfF6RdC1Asizcr+yS+oCPAb8YxXuTy9uZ/CE+lLxurgOek3RNrqmmOww8FpP2MPlbeW4nfd9I05Z78tPyG8CLEfFHeeeZKSI2RsR1EdHN5AnAf46IQu1xRsTLwI8lvSMZWgN8P8dI9RwC3i+pM/mar6FgJ32nGAD6ktt9wOM5ZjmHpJuB3wbWRcTpvPPMFBHfi4irIqI7ed0cBt6bfJ8Wxd8BHwaQtByYR3GuEDlN05Y7k3vGv8TkHvHe5OOWvEM1od8AvinpeWAF8Pv5xpku+a3iEeA54HtMfs/m/vZvSduA3cA7JB2WdCdwP7BW0gEmZ3vcX7B8fwZ0ATuT18vX88r3BhkL4zz5HgDelkyP/BbQV8DfgABffsDMrJSaec/dzMzOw+VuZlZCLnczsxJyuZuZlZDL3cyshFzuZmYl5HI3Myuh/wNV81wl95fYhAAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n",
    "y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n",
    "\n",
    "plt.scatter(x, y, marker='d')\n",
    "# 'd' shows diamond \n",
    "# 'o' is default for dot\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ea00603",
   "metadata": {},
   "source": [
    "# Transparency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f1fd2157",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n",
    "y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n",
    "\n",
    "plt.scatter(x, y,alpha=0.5)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9bc43346",
   "metadata": {},
   "source": [
    "## Labels"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9548916",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7d02e122",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "girls_grades = [89, 90, 70, 89, 100, 80, 90, 100, 80, 34]\n",
    "boys_grades = [30, 29, 49, 48, 100, 48, 38, 45, 20, 30]\n",
    "grades_range = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n",
    "fig=plt.figure()\n",
    "ax=fig.add_axes([0,0,1,1])\n",
    "ax.scatter(grades_range, girls_grades, color='r')\n",
    "ax.scatter(grades_range, boys_grades, color='b')\n",
    "ax.set_xlabel('Grades Range')\n",
    "ax.set_ylabel('Grades Scored')\n",
    "ax.set_title('scatter plot')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e65c00f4",
   "metadata": {},
   "source": [
    "# <blockquote>Heatmap</blockquote>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "879dac4f",
   "metadata": {},
   "source": [
    "### Heatmap is an interesting visualization that helps in knowing the data intensity. It conveys this information by using different colors and gradients. Heatmap is also used in finding the correlation between different sets of attributes."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46227404",
   "metadata": {},
   "source": [
    "### There is not any dediczted function in Matplotlib for building Heatmaps. That is why, mainly `imshow()` function is used."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "81042fed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[  0  10  20  30  40  50  60  70  80  90 100]\n"
     ]
    }
   ],
   "source": [
    "# np.arange(start, stop, stepsize) \n",
    "\n",
    "arr = np.arange(0, 101, 10)   # stopping point not included\n",
    "print(arr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e77858c",
   "metadata": {},
   "source": [
    "## Syntax of imshow()\n",
    "##### matplotlib.pyplot.imshow(X,cmap=None,norm=None,aspect=None, interpolation=None,alpha=None,vmin=None,vmax=None,origin=None,filternorm=1, filterrad=4.0,resample=None, url=None,data=None, **kwargs)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "### X : Array-like or PIL Image – Here the input data is provided in the form of arrays or images.\n",
    "### cmap : str or Colormap, default: ‘viridis’ – This parameter takes the colormap instance or registered colormap name.\n",
    "### norm : Normalize, optional – This parameter helps in data normalization.\n",
    "### aspect : {‘equal’, ‘auto’} or float, default: equal – This parameter determines the aspect ratio of the axes.\n",
    "### interpolation : str, default: ‘antialiased’ – With the help of this parameter, we can perform different types of interpolation as per our requirement.\n",
    "### alpha : float or array-like, optional – It increases or decreases the transparency of the plot.\n",
    "### vmin, vmax : float, optional – These parameters are useful when we want to set the data range that a colormap will cover.\n",
    "### origin : {‘upper’, ‘lower’}, default: upper – The originating coordinate is set using this parameter.\n",
    "### filternorm : bool, default: True – This is acting as resize filter.\n",
    "### filterrad : float > 0, default: 4.0 – This is the filter radius for filters.\n",
    "### resample : bool, default: True – If passed True, a full resampling method is used. If mentioned false, only resample when the output image is larger than the input image.\n",
    "### url : str, optional – Setting the url of axes image."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6baf7531",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = np.random.random((16, 16))\n",
    "plt.imshow(data, cmap='tab20_r', interpolation='nearest')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2613f0b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x7fc91a291610>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "###For the 2nd example, we will be learning how to\n",
    "###build 2-D histogram with the help of numpy and \n",
    "###matplotlib’s imshow function. First, we’ll generate\n",
    "### random data, then the data is passed to histogram2d function of numpy library. \n",
    "###Lastly, imshow function is used for plotting the final heatmap visualization.\n",
    "x = np.random.randn(10000)\n",
    "\n",
    "y = np.random.randn(10000)\n",
    "\n",
    "\n",
    "heatmap, xedges, yedges = np.histogram2d(x, y, bins=20)\n",
    "\n",
    "extent = [xedges[0], xedges[-1], yedges[0], yedges[-1]]\n",
    "\n",
    "\n",
    "plt.imshow(heatmap.T, extent=extent, origin='lower')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41c41c06",
   "metadata": {},
   "source": [
    "## Matplotlib Heatmap with Colorbar\n",
    "### We use the subplots function for plotting heatmap using pcolormesh function. The data for the three variables passed into the function of pcolormesh is generated using linspace function of numpy.\n",
    "#### The 3rd example  will be based on the pcolormesh function. To build this type of heatmap, we need to call meshgrid and linspace functions of numpy. The next step is to perform some mathematical operations for finding the minimum and maximum values for the plot.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "814745eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "b, a = np.meshgrid(np.linspace(0, 3, 81), np.linspace(0,2, 81))\n",
    "\n",
    "c = ( a ** 2 + b ** 2) * np.exp(-a ** 2 - b ** 2)\n",
    "c = c[:-1, :-1]\n",
    "l_a=a.min()\n",
    "r_a=a.max()\n",
    "l_b=b.min()\n",
    "r_b=b.max()\n",
    "l_c,r_c  = -np.abs(c).max(), np.abs(c).max()\n",
    "\n",
    "figure, axes = plt.subplots()\n",
    "\n",
    "c = axes.pcolormesh(a, b, c, cmap='cool_r', vmin=l_c, vmax=r_c)\n",
    "axes.set_title('Heatmap')\n",
    "axes.axis([l_a, r_a, l_b, r_b])\n",
    "figure.colorbar(c)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cba4253",
   "metadata": {},
   "source": [
    "## Labeled Heatmap\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "db84cf3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fruits = [\"Mango\", \"Watermelon\", \"Pineapple\", \"Strawberry\",\n",
    "              \"Cherry\", \"Muskmelon\", \"Orange\"]\n",
    "Countries = [\"India\", \"Australia\", \"USA\",\n",
    "           \"Canada\", \"Brazil\", \"Germany\", \"Spain\"]\n",
    "\n",
    "harvest = np.array([[0.8, 2.4, 2.5, 3.9, 0.0, 4.0, 0.0],\n",
    "                    [2.4, 0.0, 4.0, 1.0, 2.7, 0.0, 0.0],\n",
    "                    [1.1, 2.4, 0.8, 4.3, 1.9, 4.4, 0.0],\n",
    "                    [0.6, 0.0, 0.3, 0.0, 3.1, 0.0, 0.0],\n",
    "                    [0.7, 1.7, 0.6, 2.6, 2.2, 6.2, 0.0],\n",
    "                    [1.3, 1.2, 0.0, 0.0, 0.0, 3.2, 5.1],\n",
    "                    [0.1, 2.0, 0.0, 1.4, 0.0, 1.9, 6.3]])\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "im = ax.imshow(harvest)\n",
    "\n",
    "# Setting the labels\n",
    "ax.set_xticks(np.arange(len(Countries)))\n",
    "ax.set_yticks(np.arange(len(fruits)))\n",
    "# labeling respective list entries\n",
    "ax.set_xticklabels(Countries)\n",
    "ax.set_yticklabels(fruits)\n",
    "\n",
    "# Rotate the tick labels and set their alignment.\n",
    "plt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\n",
    "         rotation_mode=\"anchor\")\n",
    "\n",
    "# Creating text annotations by using for loop\n",
    "for i in range(len(fruits)):\n",
    "    for j in range(len(Countries)):\n",
    "        text = ax.text(j, i, harvest[i, j],\n",
    "                       ha=\"center\", va=\"center\", color=\"w\")\n",
    "\n",
    "ax.set_title(\"Growth of Fruits in Different Countries (in tons/year)\")\n",
    "fig.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c412d3aa",
   "metadata": {},
   "source": [
    "## <blockquote> Exercises </blockquote> "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e3e6000",
   "metadata": {},
   "source": [
    "### `Exercise 1:` Write a Python program to draw a scatter plot comparing two subject marks of Mathematics and Science. Use marks of 10 students."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ef3b3fb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Solution Here\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "math_marks = [88, 92, 80, 89, 100, 80, 60, 100, 80, 34]\n",
    "science_marks = [35, 79, 79, 48, 100, 88, 32, 45, 20, 30]\n",
    "marks_range = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n",
    "plt.scatter(marks_range, math_marks, label='Math marks', color='r')\n",
    "plt.scatter(marks_range, science_marks, label='Science marks', color='g')\n",
    "plt.title('Scatter Plot')\n",
    "plt.xlabel('Marks Range')\n",
    "plt.ylabel('Marks Scored')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Необработанный формат ячейки",
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
