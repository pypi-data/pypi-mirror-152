# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from elements_sdk.configuration import Configuration


class FileCopyEndpointRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'input': 'list[str]',
        'destination': 'str',
        'hardlink': 'bool',
        'sync': 'bool'
    }

    attribute_map = {
        'input': 'input',
        'destination': 'destination',
        'hardlink': 'hardlink',
        'sync': 'sync'
    }

    def __init__(self, input=None, destination=None, hardlink=None, sync=None, local_vars_configuration=None):  # noqa: E501
        """FileCopyEndpointRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._input = None
        self._destination = None
        self._hardlink = None
        self._sync = None
        self.discriminator = None

        self.input = input
        self.destination = destination
        if hardlink is not None:
            self.hardlink = hardlink
        if sync is not None:
            self.sync = sync

    @property
    def input(self):
        """Gets the input of this FileCopyEndpointRequest.  # noqa: E501


        :return: The input of this FileCopyEndpointRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this FileCopyEndpointRequest.


        :param input: The input of this FileCopyEndpointRequest.  # noqa: E501
        :type: list[str]
        """
        if self.local_vars_configuration.client_side_validation and input is None:  # noqa: E501
            raise ValueError("Invalid value for `input`, must not be `None`")  # noqa: E501

        self._input = input

    @property
    def destination(self):
        """Gets the destination of this FileCopyEndpointRequest.  # noqa: E501


        :return: The destination of this FileCopyEndpointRequest.  # noqa: E501
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this FileCopyEndpointRequest.


        :param destination: The destination of this FileCopyEndpointRequest.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and destination is None:  # noqa: E501
            raise ValueError("Invalid value for `destination`, must not be `None`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                destination is not None and len(destination) < 1):
            raise ValueError("Invalid value for `destination`, length must be greater than or equal to `1`")  # noqa: E501

        self._destination = destination

    @property
    def hardlink(self):
        """Gets the hardlink of this FileCopyEndpointRequest.  # noqa: E501


        :return: The hardlink of this FileCopyEndpointRequest.  # noqa: E501
        :rtype: bool
        """
        return self._hardlink

    @hardlink.setter
    def hardlink(self, hardlink):
        """Sets the hardlink of this FileCopyEndpointRequest.


        :param hardlink: The hardlink of this FileCopyEndpointRequest.  # noqa: E501
        :type: bool
        """

        self._hardlink = hardlink

    @property
    def sync(self):
        """Gets the sync of this FileCopyEndpointRequest.  # noqa: E501


        :return: The sync of this FileCopyEndpointRequest.  # noqa: E501
        :rtype: bool
        """
        return self._sync

    @sync.setter
    def sync(self, sync):
        """Sets the sync of this FileCopyEndpointRequest.


        :param sync: The sync of this FileCopyEndpointRequest.  # noqa: E501
        :type: bool
        """

        self._sync = sync

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileCopyEndpointRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FileCopyEndpointRequest):
            return True

        return self.to_dict() != other.to_dict()
