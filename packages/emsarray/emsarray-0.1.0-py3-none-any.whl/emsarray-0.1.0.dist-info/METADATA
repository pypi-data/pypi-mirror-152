Metadata-Version: 2.1
Name: emsarray
Version: 0.1.0
Summary: xarray extension that supports EMS model formats
Author: "Coastal Environmental Modelling team, Oceans and Atmosphere, CSIRO"
Author-email: "coasts@csiro.au"
License: "CSIRO Open Source Software Licence Agreement (variation of the BSD / MIT License)"
Description-Content-Type: text/markdown
License-File: LICENCE
Requires-Dist: geojson (>=2.5.0)
Requires-Dist: numpy (>=1.18.0)
Requires-Dist: netcdf4 (>=1.5.3)
Requires-Dist: shapely (>=1.8.0)
Requires-Dist: xarray[parallel] (>=0.18.2)
Requires-Dist: bottleneck (>=1.3)
Provides-Extra: complete
Requires-Dist: matplotlib (>=3.4.3) ; extra == 'complete'
Requires-Dist: scipy (>=1.6.0) ; extra == 'complete'
Requires-Dist: cartopy (>=0.20.0) ; extra == 'complete'
Requires-Dist: pykdtree (>=1.2.2) ; extra == 'complete'
Requires-Dist: pooch (>=1.3.0) ; extra == 'complete'
Provides-Extra: docs
Requires-Dist: matplotlib (>=3.4.3) ; extra == 'docs'
Requires-Dist: scipy (>=1.6.0) ; extra == 'docs'
Requires-Dist: cartopy (>=0.20.0) ; extra == 'docs'
Requires-Dist: pykdtree (>=1.2.2) ; extra == 'docs'
Requires-Dist: pooch (>=1.3.0) ; extra == 'docs'
Requires-Dist: sphinx (~=4.3.1) ; extra == 'docs'
Requires-Dist: sphinx-book-theme (~=0.3.2) ; extra == 'docs'
Requires-Dist: livereload (~=2.6.3) ; extra == 'docs'
Requires-Dist: nbsphinx (~=0.8.8) ; extra == 'docs'
Requires-Dist: ipykernel (~=6.13.0) ; extra == 'docs'
Provides-Extra: plot
Requires-Dist: matplotlib (>=3.4.3) ; extra == 'plot'
Requires-Dist: scipy (>=1.6.0) ; extra == 'plot'
Requires-Dist: cartopy (>=0.20.0) ; extra == 'plot'
Requires-Dist: pykdtree (>=1.2.2) ; extra == 'plot'
Provides-Extra: testing
Requires-Dist: matplotlib (>=3.4.3) ; extra == 'testing'
Requires-Dist: scipy (>=1.6.0) ; extra == 'testing'
Requires-Dist: cartopy (>=0.20.0) ; extra == 'testing'
Requires-Dist: pykdtree (>=1.2.2) ; extra == 'testing'
Requires-Dist: pooch (>=1.3.0) ; extra == 'testing'
Requires-Dist: sphinx (~=4.3.1) ; extra == 'testing'
Requires-Dist: sphinx-book-theme (~=0.3.2) ; extra == 'testing'
Requires-Dist: livereload (~=2.6.3) ; extra == 'testing'
Requires-Dist: nbsphinx (~=0.8.8) ; extra == 'testing'
Requires-Dist: ipykernel (~=6.13.0) ; extra == 'testing'
Requires-Dist: pytest ; extra == 'testing'
Requires-Dist: pytest-cov ; extra == 'testing'
Requires-Dist: mypy ; extra == 'testing'
Requires-Dist: pandas-stubs ; extra == 'testing'
Requires-Dist: types-pytz ; extra == 'testing'
Requires-Dist: flake8 ; extra == 'testing'
Requires-Dist: isort ; extra == 'testing'
Requires-Dist: tox ; extra == 'testing'
Provides-Extra: tutorial
Requires-Dist: pooch (>=1.3.0) ; extra == 'tutorial'

# emsarray

[![Documentation Status](https://readthedocs.org/projects/emsarray/badge/?version=latest)](https://emsarray.readthedocs.io/en/latest/?badge=latest)

The `emsarray` package provides a common interface
for working with the many model formats used at CSIRO.
It enhances [`xarray`][xarray] Datasets
and provides a set of common operations for manipulating datasets.

To use, open the dataset using the `emsarray.open_dataset()` function
and use the `dataset.ems` attribute:

```python
import emsarray
import json

dataset = emsarray.tutorial.open_dataset('gbr4')
with open("geometry.geojson", "w") as f:
	json.dump(dataset.ems.make_geojson_geometry(), f)
```

Some methods take a DataArray as a parameter:

```python
# Plot the sea surface temperature for time = 0
temp = dataset['temp'].isel(time=0, k=-1)
dataset.ems.plot(temp)
```

![Plot of sea surface temperature from the GBR4 example file](docs/_static/images/gbr4_temp.png)

## Developing

To get set up for development, make a virtual environment and install the dependencies:

```shell
$ python3 -m venv
$ source venv/bin/activate
$ pip install --upgrade pip>=21.3
$ pip install -e . -r requirements.txt
```

## Tests

To run the tests, install and run `tox`:

```shell
$ python3 -m venv
$ source venv/bin/activate
$ pip install --upgrade pip>=21.3 tox
$ tox
```

## Documentation

To build the documentation, install the development requirements as above and invoke Sphinx:

```shell
$ make -C docs/ html
```

While updating or adding to the documentation,
run the `live` target to automatically rebuild the docs whenever anything changes.
This will serve the documentation via a [`livereload`][livereload] server.

```shell
$ make -C docs/ live
```

You can the view the docs at <http://localhost:5500>

[xarray]: https://xarray.pydata.org/
[livereload]: https://livereload.readthedocs.io/en/latest/
