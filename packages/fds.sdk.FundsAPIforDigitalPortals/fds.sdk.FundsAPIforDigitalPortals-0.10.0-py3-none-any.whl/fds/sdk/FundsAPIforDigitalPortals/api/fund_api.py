"""
    Funds API For Digital Portals

    Search for mutual funds and ETFs using one single consolidated API, including a criteria-based screener. The API provides also base data, key figures, and holdings.  A separate endpoint returns the possible values and value range for the parameters that the endpoint /fund/notation/screener/search accepts: Application developers can request the values and value range only for a restricted set of notations that match predefined parameters. This functionality may be used to pre-fill the values and value ranges of the parameters of the /fund/notation/screener/search endpoint so that performing a search always leads to a non-empty set of notations.  This API is fully integrated with the corresponding Quotes API, allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the Time Series API for Digital Portals.  Similar criteria based screener APIs exist for equity instruments and securitized derivatives: See the Stocks API and the Securitized Derivatives API for details.  # noqa: E501

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.FundsAPIforDigitalPortals.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.FundsAPIforDigitalPortals.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.FundsAPIforDigitalPortals.exceptions import ApiException
from fds.sdk.FundsAPIforDigitalPortals.model.inline_object import InlineObject
from fds.sdk.FundsAPIforDigitalPortals.model.inline_object1 import InlineObject1
from fds.sdk.FundsAPIforDigitalPortals.model.inline_object2 import InlineObject2
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response200 import InlineResponse200
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response2001 import InlineResponse2001
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response2002 import InlineResponse2002
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response2003 import InlineResponse2003
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response2004 import InlineResponse2004
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response2005 import InlineResponse2005
from fds.sdk.FundsAPIforDigitalPortals.model.inline_response2006 import InlineResponse2006





class FundApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_fund_holding_list_by_instrument_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse200,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/holding/listByInstrument',
                'operation_id': 'get_fund_holding_list_by_instrument',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'attributes',
                    'sort',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'sort',
                ],
                'validation': [
                    'attributes',
                    'sort',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('sort',): {

                        'max_items': 2,
                    },
                },
                'allowed_values': {
                    ('sort',): {

                        "HOLDINGS.NAME": "holdings.name",
                        "-HOLDINGS.NAME": "-holdings.name",
                        "HOLDINGS.WEIGHT": "holdings.weight",
                        "-HOLDINGS.WEIGHT": "-holdings.weight"
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'attributes':
                        ([str],),
                    'sort':
                        ([str],),
                },
                'attribute_map': {
                    'id': 'id',
                    'attributes': '_attributes',
                    'sort': '_sort',
                },
                'location_map': {
                    'id': 'query',
                    'attributes': 'query',
                    'sort': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                    'sort': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_notation_key_figures_benchmark_month_1_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2002,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/keyFigures/benchmark/month/1/get',
                'operation_id': 'get_fund_notation_key_figures_benchmark_month_1_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                    'id_notation_benchmark',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('id_notation_benchmark',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'id_notation_benchmark':
                        ([str],),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'id_notation_benchmark': 'idNotationBenchmark',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'id_notation_benchmark': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'id_notation_benchmark': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_notation_key_figures_benchmark_month_3_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2002,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/keyFigures/benchmark/month/3/get',
                'operation_id': 'get_fund_notation_key_figures_benchmark_month_3_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                    'id_notation_benchmark',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('id_notation_benchmark',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'id_notation_benchmark':
                        ([str],),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'id_notation_benchmark': 'idNotationBenchmark',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'id_notation_benchmark': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'id_notation_benchmark': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_notation_key_figures_benchmark_week_1_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2003,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/keyFigures/benchmark/week/1/get',
                'operation_id': 'get_fund_notation_key_figures_benchmark_week_1_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                    'id_notation_benchmark',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('id_notation_benchmark',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'id_notation_benchmark':
                        ([str],),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'id_notation_benchmark': 'idNotationBenchmark',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'id_notation_benchmark': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'id_notation_benchmark': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_notation_key_figures_benchmark_year_1_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2002,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/keyFigures/benchmark/year/1/get',
                'operation_id': 'get_fund_notation_key_figures_benchmark_year_1_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                    'id_notation_benchmark',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('id_notation_benchmark',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'id_notation_benchmark':
                        ([str],),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'id_notation_benchmark': 'idNotationBenchmark',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'id_notation_benchmark': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'id_notation_benchmark': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_notation_key_figures_benchmark_year_3_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2002,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/keyFigures/benchmark/year/3/get',
                'operation_id': 'get_fund_notation_key_figures_benchmark_year_3_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                    'id_notation_benchmark',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('id_notation_benchmark',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'id_notation_benchmark':
                        ([str],),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'id_notation_benchmark': 'idNotationBenchmark',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'id_notation_benchmark': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'id_notation_benchmark': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_notation_key_figures_benchmark_year_5_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2002,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/keyFigures/benchmark/year/5/get',
                'operation_id': 'get_fund_notation_key_figures_benchmark_year_5_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                    'id_notation_benchmark',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'id_notation_benchmark',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('id_notation_benchmark',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'id_notation_benchmark':
                        ([str],),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'id_notation_benchmark': 'idNotationBenchmark',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'id_notation_benchmark': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'id_notation_benchmark': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fund_share_class_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2006,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/shareClass/get',
                'operation_id': 'get_fund_share_class_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'attributes',
                    'language',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'id': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.post_fund_issuer_search_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2001,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/issuer/search',
                'operation_id': 'post_fund_issuer_search',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (InlineObject,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.post_fund_notation_screener_search_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2004,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/screener/search',
                'operation_id': 'post_fund_notation_screener_search',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (InlineObject1,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.post_fund_notation_screener_value_ranges_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse2005,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/fund/notation/screener/valueRanges/get',
                'operation_id': 'post_fund_notation_screener_value_ranges_get',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (InlineObject2,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")

    def get_fund_holding_list_by_instrument(
        self,
        id,
        **kwargs
    ) -> InlineResponse200:
        """Holdings of a fund.  # noqa: E501

        Holdings of a fund. Only the top 10 holdings with regard to their weighting in the fund portfolio are returned. Therefore, the weights of the holdings do not add up to 1 (i.e. 100%).  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of an instrument of a fund share class.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            sort ([str]): Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.. [optional] if omitted the server will use the default value of ["-holdings.weight"]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse200
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_fund_holding_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def get_fund_holding_list_by_instrument_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[InlineResponse200, int, typing.MutableMapping]:
        """Holdings of a fund.  # noqa: E501

        Holdings of a fund. Only the top 10 holdings with regard to their weighting in the fund portfolio are returned. Therefore, the weights of the holdings do not add up to 1 (i.e. 100%).  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of an instrument of a fund share class.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            sort ([str]): Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.. [optional] if omitted the server will use the default value of ["-holdings.weight"]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse200
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_fund_holding_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def get_fund_holding_list_by_instrument_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[InlineResponse200]":
        """Holdings of a fund.  # noqa: E501

        Holdings of a fund. Only the top 10 holdings with regard to their weighting in the fund portfolio are returned. Therefore, the weights of the holdings do not add up to 1 (i.e. 100%).  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of an instrument of a fund share class.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            sort ([str]): Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.. [optional] if omitted the server will use the default value of ["-holdings.weight"]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse200]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_fund_holding_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def get_fund_holding_list_by_instrument_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse200, int, typing.MutableMapping]]":
        """Holdings of a fund.  # noqa: E501

        Holdings of a fund. Only the top 10 holdings with regard to their weighting in the fund portfolio are returned. Therefore, the weights of the holdings do not add up to 1 (i.e. 100%).  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of an instrument of a fund share class.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            sort ([str]): Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.. [optional] if omitted the server will use the default value of ["-holdings.weight"]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse200, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_fund_holding_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_1_get(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> InlineResponse2002:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_1_get_with_http_info(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> typing.Tuple[InlineResponse2002, int, typing.MutableMapping]:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_1_get_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[InlineResponse2002]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2002]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_1_get_with_http_info_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2002, int, typing.MutableMapping]]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one month.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2002, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_3_get(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> InlineResponse2002:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_3_get_with_http_info(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> typing.Tuple[InlineResponse2002, int, typing.MutableMapping]:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_3_get_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[InlineResponse2002]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2002]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_month_3_get_with_http_info_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2002, int, typing.MutableMapping]]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three months.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2002, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_week_1_get(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> InlineResponse2003:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2003
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_week_1_get_with_http_info(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> typing.Tuple[InlineResponse2003, int, typing.MutableMapping]:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2003
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_week_1_get_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[InlineResponse2003]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2003]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_week_1_get_with_http_info_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2003, int, typing.MutableMapping]]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one week.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2003, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_1_get(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> InlineResponse2002:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_1_get_with_http_info(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> typing.Tuple[InlineResponse2002, int, typing.MutableMapping]:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_1_get_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[InlineResponse2002]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2002]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_1_get_with_http_info_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2002, int, typing.MutableMapping]]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of one year.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2002, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_3_get(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> InlineResponse2002:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_3_get_with_http_info(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> typing.Tuple[InlineResponse2002, int, typing.MutableMapping]:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_3_get_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[InlineResponse2002]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2002]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_3_get_with_http_info_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2002, int, typing.MutableMapping]]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of three years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2002, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_5_get(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> InlineResponse2002:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_5_get_with_http_info(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> typing.Tuple[InlineResponse2002, int, typing.MutableMapping]:
        """End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2002
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_5_get_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[InlineResponse2002]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2002]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_notation_key_figures_benchmark_year_5_get_with_http_info_async(
        self,
        id,
        id_notation_benchmark,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2002, int, typing.MutableMapping]]":
        """End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501

        End-of-day (EOD) benchmark key figures of a fund for the time range of five years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.
            id_notation_benchmark ([str]): List of benchmark notations.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2002, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        kwargs['id_notation_benchmark'] = \
            id_notation_benchmark
        return self.get_fund_notation_key_figures_benchmark_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_share_class_get(
        self,
        id,
        **kwargs
    ) -> InlineResponse2006:
        """Fundamental data for a share class of a fund.  # noqa: E501

        The provided fundamental data comprises share class-specific data and data applying to the fund and thus to all its share classes. An instrument other than a fund share class yields empty values for share class-specific or fund-specific attributes.   Dates are interpreted in the timezone of the fund company. For attributes referring to a country, see endpoint `/basic/region/country/list` for possible values.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the instrument.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2006
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_fund_share_class_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_share_class_get_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[InlineResponse2006, int, typing.MutableMapping]:
        """Fundamental data for a share class of a fund.  # noqa: E501

        The provided fundamental data comprises share class-specific data and data applying to the fund and thus to all its share classes. An instrument other than a fund share class yields empty values for share class-specific or fund-specific attributes.   Dates are interpreted in the timezone of the fund company. For attributes referring to a country, see endpoint `/basic/region/country/list` for possible values.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the instrument.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2006
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_fund_share_class_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_share_class_get_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[InlineResponse2006]":
        """Fundamental data for a share class of a fund.  # noqa: E501

        The provided fundamental data comprises share class-specific data and data applying to the fund and thus to all its share classes. An instrument other than a fund share class yields empty values for share class-specific or fund-specific attributes.   Dates are interpreted in the timezone of the fund company. For attributes referring to a country, see endpoint `/basic/region/country/list` for possible values.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the instrument.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2006]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_fund_share_class_get_endpoint.call_with_http_info(**kwargs)

    def get_fund_share_class_get_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2006, int, typing.MutableMapping]]":
        """Fundamental data for a share class of a fund.  # noqa: E501

        The provided fundamental data comprises share class-specific data and data applying to the fund and thus to all its share classes. An instrument other than a fund share class yields empty values for share class-specific or fund-specific attributes.   Dates are interpreted in the timezone of the fund company. For attributes referring to a country, see endpoint `/basic/region/country/list` for possible values.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the instrument.

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): ISO 639-1 code of the language.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2006, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_fund_share_class_get_endpoint.call_with_http_info(**kwargs)

    def post_fund_issuer_search(
        self,
        **kwargs
    ) -> InlineResponse2001:
        """Search for issuers of funds.  # noqa: E501

        Search for issuers of funds. FactSet does not consolidate the data provided by different suppliers, therefore the result may contain more than one identifier for a given issuer. The response is limited to 100 results.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            body (InlineObject): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2001
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_fund_issuer_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_issuer_search_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse2001, int, typing.MutableMapping]:
        """Search for issuers of funds.  # noqa: E501

        Search for issuers of funds. FactSet does not consolidate the data provided by different suppliers, therefore the result may contain more than one identifier for a given issuer. The response is limited to 100 results.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            body (InlineObject): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2001
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_fund_issuer_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_issuer_search_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse2001]":
        """Search for issuers of funds.  # noqa: E501

        Search for issuers of funds. FactSet does not consolidate the data provided by different suppliers, therefore the result may contain more than one identifier for a given issuer. The response is limited to 100 results.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            body (InlineObject): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2001]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_fund_issuer_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_issuer_search_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2001, int, typing.MutableMapping]]":
        """Search for issuers of funds.  # noqa: E501

        Search for issuers of funds. FactSet does not consolidate the data provided by different suppliers, therefore the result may contain more than one identifier for a given issuer. The response is limited to 100 results.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            body (InlineObject): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2001, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_fund_issuer_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_search(
        self,
        **kwargs
    ) -> InlineResponse2004:
        """Screener for notations of share classes of mutual and exchange traded funds based on fund-specific parameters.  # noqa: E501

        Screener for notations of share classes of mutual and exchange traded funds (ETF) based on fund-specific parameters. The funds represent legal entities, juristic persons in particular, and may have more than one share class. The share classes represent instruments, and the notations represent price sources for the share classes. Some parameters apply to the fund as a whole, i.e. a notation for each share class of a fund matching the criteria is returned, for example `issuer.selection`. Others apply to the share classes, thus only notations of matching share classes are returned, for example `minimumInvestment.initial`. The result is limited to the notations that satisfy all the selected filters. In order to guarantee comparability when using the performance parameters, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`) and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.       A specific set of share classes or share class notations can be restricted to or excluded by using customer-specific instrument or notation selection lists respectively. Such selection lists are set up by FactSet upon request. All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            body (InlineObject1): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2004
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_fund_notation_screener_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_search_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse2004, int, typing.MutableMapping]:
        """Screener for notations of share classes of mutual and exchange traded funds based on fund-specific parameters.  # noqa: E501

        Screener for notations of share classes of mutual and exchange traded funds (ETF) based on fund-specific parameters. The funds represent legal entities, juristic persons in particular, and may have more than one share class. The share classes represent instruments, and the notations represent price sources for the share classes. Some parameters apply to the fund as a whole, i.e. a notation for each share class of a fund matching the criteria is returned, for example `issuer.selection`. Others apply to the share classes, thus only notations of matching share classes are returned, for example `minimumInvestment.initial`. The result is limited to the notations that satisfy all the selected filters. In order to guarantee comparability when using the performance parameters, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`) and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.       A specific set of share classes or share class notations can be restricted to or excluded by using customer-specific instrument or notation selection lists respectively. Such selection lists are set up by FactSet upon request. All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            body (InlineObject1): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2004
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_fund_notation_screener_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_search_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse2004]":
        """Screener for notations of share classes of mutual and exchange traded funds based on fund-specific parameters.  # noqa: E501

        Screener for notations of share classes of mutual and exchange traded funds (ETF) based on fund-specific parameters. The funds represent legal entities, juristic persons in particular, and may have more than one share class. The share classes represent instruments, and the notations represent price sources for the share classes. Some parameters apply to the fund as a whole, i.e. a notation for each share class of a fund matching the criteria is returned, for example `issuer.selection`. Others apply to the share classes, thus only notations of matching share classes are returned, for example `minimumInvestment.initial`. The result is limited to the notations that satisfy all the selected filters. In order to guarantee comparability when using the performance parameters, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`) and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.       A specific set of share classes or share class notations can be restricted to or excluded by using customer-specific instrument or notation selection lists respectively. Such selection lists are set up by FactSet upon request. All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            body (InlineObject1): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2004]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_fund_notation_screener_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_search_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2004, int, typing.MutableMapping]]":
        """Screener for notations of share classes of mutual and exchange traded funds based on fund-specific parameters.  # noqa: E501

        Screener for notations of share classes of mutual and exchange traded funds (ETF) based on fund-specific parameters. The funds represent legal entities, juristic persons in particular, and may have more than one share class. The share classes represent instruments, and the notations represent price sources for the share classes. Some parameters apply to the fund as a whole, i.e. a notation for each share class of a fund matching the criteria is returned, for example `issuer.selection`. Others apply to the share classes, thus only notations of matching share classes are returned, for example `minimumInvestment.initial`. The result is limited to the notations that satisfy all the selected filters. In order to guarantee comparability when using the performance parameters, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`) and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.       A specific set of share classes or share class notations can be restricted to or excluded by using customer-specific instrument or notation selection lists respectively. Such selection lists are set up by FactSet upon request. All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            body (InlineObject1): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2004, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_fund_notation_screener_search_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_value_ranges_get(
        self,
        **kwargs
    ) -> InlineResponse2005:
        """Possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`.  # noqa: E501

        The endpoint returns the possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`. It allows to request the values and value ranges only for a restricted set of notations that match predefined parameters. The functionality may be used to pre-fill the values and value ranges of the parameters of the `/fund/notation/screener/search` endpoint so that performing a search always leads to a non-empty set of notations. In order to guarantee comparability when using the performance parameter, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`), and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            body (InlineObject2): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2005
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_fund_notation_screener_value_ranges_get_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_value_ranges_get_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse2005, int, typing.MutableMapping]:
        """Possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`.  # noqa: E501

        The endpoint returns the possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`. It allows to request the values and value ranges only for a restricted set of notations that match predefined parameters. The functionality may be used to pre-fill the values and value ranges of the parameters of the `/fund/notation/screener/search` endpoint so that performing a search always leads to a non-empty set of notations. In order to guarantee comparability when using the performance parameter, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`), and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            body (InlineObject2): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse2005
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_fund_notation_screener_value_ranges_get_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_value_ranges_get_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse2005]":
        """Possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`.  # noqa: E501

        The endpoint returns the possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`. It allows to request the values and value ranges only for a restricted set of notations that match predefined parameters. The functionality may be used to pre-fill the values and value ranges of the parameters of the `/fund/notation/screener/search` endpoint so that performing a search always leads to a non-empty set of notations. In order to guarantee comparability when using the performance parameter, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`), and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            body (InlineObject2): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse2005]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_fund_notation_screener_value_ranges_get_endpoint.call_with_http_info(**kwargs)

    def post_fund_notation_screener_value_ranges_get_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse2005, int, typing.MutableMapping]]":
        """Possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`.  # noqa: E501

        The endpoint returns the possible values and value ranges for the parameters used in the endpoint `/fund/notation/screener/search`. It allows to request the values and value ranges only for a restricted set of notations that match predefined parameters. The functionality may be used to pre-fill the values and value ranges of the parameters of the `/fund/notation/screener/search` endpoint so that performing a search always leads to a non-empty set of notations. In order to guarantee comparability when using the performance parameter, the endpoint is restricted to three markets only, Mountain-View Funds (`id=1126`), FactSet Fund Prices (`id=1127`), and WM Datenservice (`id=1050`) since the notations from these markets provide a net asset value (NAV) - based total performance. The total performance factors in all earnings distributions of a share class and thus allows to compare the overall (total) performance of distributing and non-distributing share classes.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            body (InlineObject2): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse2005, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_fund_notation_screener_value_ranges_get_endpoint.call_with_http_info(**kwargs)

