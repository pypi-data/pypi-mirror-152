Metadata-Version: 2.1
Name: fds.sdk.NewsAPIforDigitalPortals
Version: 0.10.0
Summary: News API for Digital Portals client library for Python
Home-page: https://github.com/FactSet/enterprise-sdk/tree/main/code/python/NewsAPIforDigitalPortals/v2
Author: FactSet Research Systems
License: Apache-2.0
Keywords: FactSet,API,SDK
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: urllib3 (>=1.25.3)
Requires-Dist: python-dateutil
Requires-Dist: fds.sdk.utils (>=1.0.0)

<img alt="FactSet" src="https://www.factset.com/hubfs/Assets/images/factset-logo.svg" height="56" width="290">

# News API for Digital Portals client library for Python

[![PyPi](https://img.shields.io/pypi/v/fds.sdk.NewsAPIforDigitalPortals)](https://pypi.org/project/fds.sdk.NewsAPIforDigitalPortals/)
[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: v1
- Package version: 0.10.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements

* Python >= 3.6

## Installation

### Poetry

```shell
poetry add fds.sdk.utils fds.sdk.NewsAPIforDigitalPortals
```

### pip

```shell
pip install fds.sdk.utils fds.sdk.NewsAPIforDigitalPortals
```

## Usage

1. [Generate authentication credentials](../../../../README.md#authentication).
2. Setup Python environment.
   1. Install and activate python 3.6+. If you're using [pyenv](https://github.com/pyenv/pyenv):

      ```sh
      pyenv install 3.9.7
      pyenv shell 3.9.7
      ```

   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).
3. [Install dependencies](#installation).
4. Run the following:

```python

from fds.sdk.utils.authentication import ConfidentialClient
import fds.sdk.NewsAPIforDigitalPortals
from fds.sdk.NewsAPIforDigitalPortals.api import news_api
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object import InlineObject
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object1 import InlineObject1
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object2 import InlineObject2
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object3 import InlineObject3
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object4 import InlineObject4
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object5 import InlineObject5
from fds.sdk.NewsAPIforDigitalPortals.model.inline_object6 import InlineObject6
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response200 import InlineResponse200
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2001 import InlineResponse2001
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2002 import InlineResponse2002
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2003 import InlineResponse2003
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2004 import InlineResponse2004
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2005 import InlineResponse2005
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2006 import InlineResponse2006
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2007 import InlineResponse2007
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2008 import InlineResponse2008
from fds.sdk.NewsAPIforDigitalPortals.model.inline_response2009 import InlineResponse2009
from pprint import pprint

# See configuration.py for a list of all supported configuration parameters.

# Examples for each supported authentication method are below,
# choose one that satisfies your use case.

# (Preferred) OAuth 2.0: FactSetOAuth2
# See https://github.com/FactSet/enterprise-sdk#oauth-20
# for information on how to create the app-config.json file
# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication
# for more information on using the ConfidentialClient class
configuration = fds.sdk.NewsAPIforDigitalPortals.Configuration(
    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')
)

# Basic authentication: FactSetApiKey
# See https://github.com/FactSet/enterprise-sdk#api-key
# for information how to create an API key
# configuration = fds.sdk.NewsAPIforDigitalPortals.Configuration(
#     username='USERNAME-SERIAL',
#     password='API-KEY'
# )

# Enter a context with an instance of the API client
with fds.sdk.NewsAPIforDigitalPortals.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = news_api.NewsApi(api_client)
    code = "0" # str | Identifier of a news article.
    include_media = False # bool | If true, media references are included if available. (optional) (default to False)
    attributes = [
        "_attributes_example",
    ] # [str] | Limit the attributes returned in the response to the specified set. (optional)
    language = "_language_example" # str | ISO 639-1 code of the language. (optional)

    # Get response
    try:
        # Details for a news article.
        api_response = api_instance.get_news_article_get(code, include_media=include_media, attributes=attributes, language=language)
        pprint(api_response)
    except fds.sdk.NewsAPIforDigitalPortals.ApiException as e:
        print("Exception when calling NewsApi->get_news_article_get: %s\n" % e)

    # Get response, http status code and response headers
    # try:
    #     # Details for a news article.
    #     api_response, http_status_code, response_headers = api_instance.get_news_article_get_with_http_info(code, include_media=include_media, attributes=attributes, language=language)
    #     pprint(api_response)
    #     pprint(http_status_code)
    #     pprint(response_headers)
    # except fds.sdk.NewsAPIforDigitalPortals.ApiException as e:
    #     print("Exception when calling NewsApi->get_news_article_get: %s\n" % e)

    # Get response asynchronous
    # try:
    #     # Details for a news article.
    #     async_result = api_instance.get_news_article_get_async(code, include_media=include_media, attributes=attributes, language=language)
    #     api_response = async_result.get()
    #     pprint(api_response)
    # except fds.sdk.NewsAPIforDigitalPortals.ApiException as e:
    #     print("Exception when calling NewsApi->get_news_article_get: %s\n" % e)

    # Get response, http status code and response headers asynchronous
    # try:
    #     # Details for a news article.
    #     async_result = api_instance.get_news_article_get_with_http_info_async(code, include_media=include_media, attributes=attributes, language=language)
    #     api_response, http_status_code, response_headers = async_result.get()
    #     pprint(api_response)
    #     pprint(http_status_code)
    #     pprint(response_headers)
    # except fds.sdk.NewsAPIforDigitalPortals.ApiException as e:
    #     print("Exception when calling NewsApi->get_news_article_get: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.factset.com/wealth/v1*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*NewsApi* | [**get_news_article_get**](docs/NewsApi.md#get_news_article_get) | **GET** /news/article/get | Details for a news article.
*NewsApi* | [**get_news_article_type_get**](docs/NewsApi.md#get_news_article_type_get) | **GET** /news/article/type/get | Details for a news article type.
*NewsApi* | [**get_news_article_type_list**](docs/NewsApi.md#get_news_article_type_list) | **GET** /news/article/type/list | List of news article types.
*NewsApi* | [**get_news_distributor_get**](docs/NewsApi.md#get_news_distributor_get) | **GET** /news/distributor/get | Details of a distributor.
*NewsApi* | [**get_news_distributor_list**](docs/NewsApi.md#get_news_distributor_list) | **GET** /news/distributor/list | List of distributors.
*NewsApi* | [**get_news_publisher_get**](docs/NewsApi.md#get_news_publisher_get) | **GET** /news/publisher/get | Details of a publisher.
*NewsApi* | [**get_news_publisher_list**](docs/NewsApi.md#get_news_publisher_list) | **GET** /news/publisher/list | List of publishers.
*NewsApi* | [**get_news_publisher_list_by_distributor**](docs/NewsApi.md#get_news_publisher_list_by_distributor) | **GET** /news/publisher/listByDistributor | List of publishers provided by the given distributor.
*NewsApi* | [**post_news_article_list**](docs/NewsApi.md#post_news_article_list) | **POST** /news/article/list | List of news articles.
*NewsApi* | [**post_news_article_list_by_chain**](docs/NewsApi.md#post_news_article_list_by_chain) | **POST** /news/article/listByChain | List news articles of an article chain.
*NewsApi* | [**post_news_article_list_by_index**](docs/NewsApi.md#post_news_article_list_by_index) | **POST** /news/article/listByIndex | News articles for instruments that are constituents of the given indices.
*NewsApi* | [**post_news_article_list_by_instrument**](docs/NewsApi.md#post_news_article_list_by_instrument) | **POST** /news/article/listByInstrument | News articles for instruments.
*NewsApi* | [**post_news_article_list_by_media_kind**](docs/NewsApi.md#post_news_article_list_by_media_kind) | **POST** /news/article/listByMediaKind | List news articles which contain media of specific media kinds.
*NewsApi* | [**post_news_article_search_by_text**](docs/NewsApi.md#post_news_article_search_by_text) | **POST** /news/article/searchByText | Search for news articles using a fulltext search.
*NewsApi* | [**post_news_publisher_search_by_name**](docs/NewsApi.md#post_news_publisher_search_by_name) | **POST** /news/publisher/searchByName | Search for publishers.


## Documentation For Models

 - [AttributesMember](docs/AttributesMember.md)
 - [CursorBasedPaginationOutputObject](docs/CursorBasedPaginationOutputObject.md)
 - [CursorBasedPaginationOutputObjectWithoutTotal](docs/CursorBasedPaginationOutputObjectWithoutTotal.md)
 - [ErrorMetaObject](docs/ErrorMetaObject.md)
 - [ErrorObject](docs/ErrorObject.md)
 - [InlineObject](docs/InlineObject.md)
 - [InlineObject1](docs/InlineObject1.md)
 - [InlineObject2](docs/InlineObject2.md)
 - [InlineObject3](docs/InlineObject3.md)
 - [InlineObject4](docs/InlineObject4.md)
 - [InlineObject5](docs/InlineObject5.md)
 - [InlineObject6](docs/InlineObject6.md)
 - [InlineResponse200](docs/InlineResponse200.md)
 - [InlineResponse2001](docs/InlineResponse2001.md)
 - [InlineResponse2001Categories](docs/InlineResponse2001Categories.md)
 - [InlineResponse2001Chain](docs/InlineResponse2001Chain.md)
 - [InlineResponse2001Data](docs/InlineResponse2001Data.md)
 - [InlineResponse2001Distributor](docs/InlineResponse2001Distributor.md)
 - [InlineResponse2001Fsym](docs/InlineResponse2001Fsym.md)
 - [InlineResponse2001FsymSecurity](docs/InlineResponse2001FsymSecurity.md)
 - [InlineResponse2001Instruments](docs/InlineResponse2001Instruments.md)
 - [InlineResponse2001Language](docs/InlineResponse2001Language.md)
 - [InlineResponse2001Meta](docs/InlineResponse2001Meta.md)
 - [InlineResponse2001Publisher](docs/InlineResponse2001Publisher.md)
 - [InlineResponse2001Types](docs/InlineResponse2001Types.md)
 - [InlineResponse2002](docs/InlineResponse2002.md)
 - [InlineResponse2002Data](docs/InlineResponse2002Data.md)
 - [InlineResponse2002DataArticles](docs/InlineResponse2002DataArticles.md)
 - [InlineResponse2002DataDistributor](docs/InlineResponse2002DataDistributor.md)
 - [InlineResponse2003](docs/InlineResponse2003.md)
 - [InlineResponse2003Data](docs/InlineResponse2003Data.md)
 - [InlineResponse2004](docs/InlineResponse2004.md)
 - [InlineResponse2004Data](docs/InlineResponse2004Data.md)
 - [InlineResponse2005](docs/InlineResponse2005.md)
 - [InlineResponse2005Data](docs/InlineResponse2005Data.md)
 - [InlineResponse2005DataDelivery](docs/InlineResponse2005DataDelivery.md)
 - [InlineResponse2006](docs/InlineResponse2006.md)
 - [InlineResponse2006Data](docs/InlineResponse2006Data.md)
 - [InlineResponse2007](docs/InlineResponse2007.md)
 - [InlineResponse2007Data](docs/InlineResponse2007Data.md)
 - [InlineResponse2007DataDistributor](docs/InlineResponse2007DataDistributor.md)
 - [InlineResponse2008](docs/InlineResponse2008.md)
 - [InlineResponse2008Data](docs/InlineResponse2008Data.md)
 - [InlineResponse2008Meta](docs/InlineResponse2008Meta.md)
 - [InlineResponse2009](docs/InlineResponse2009.md)
 - [InlineResponse2009Data](docs/InlineResponse2009Data.md)
 - [InlineResponse200Data](docs/InlineResponse200Data.md)
 - [InlineResponse200DataCategories](docs/InlineResponse200DataCategories.md)
 - [InlineResponse200DataDistributor](docs/InlineResponse200DataDistributor.md)
 - [InlineResponse200DataFsym](docs/InlineResponse200DataFsym.md)
 - [InlineResponse200DataFsymSecurity](docs/InlineResponse200DataFsymSecurity.md)
 - [InlineResponse200DataInstruments](docs/InlineResponse200DataInstruments.md)
 - [InlineResponse200DataLanguage](docs/InlineResponse200DataLanguage.md)
 - [InlineResponse200DataMedia](docs/InlineResponse200DataMedia.md)
 - [InlineResponse200DataPublisher](docs/InlineResponse200DataPublisher.md)
 - [InlineResponse200DataTypes](docs/InlineResponse200DataTypes.md)
 - [InlineResponse200Meta](docs/InlineResponse200Meta.md)
 - [LanguageMember](docs/LanguageMember.md)
 - [NewsArticleListByChainData](docs/NewsArticleListByChainData.md)
 - [NewsArticleListByChainDataFilter](docs/NewsArticleListByChainDataFilter.md)
 - [NewsArticleListByIndexData](docs/NewsArticleListByIndexData.md)
 - [NewsArticleListByInstrumentData](docs/NewsArticleListByInstrumentData.md)
 - [NewsArticleListByMediaKindData](docs/NewsArticleListByMediaKindData.md)
 - [NewsArticleListData](docs/NewsArticleListData.md)
 - [NewsArticleListDataFilter](docs/NewsArticleListDataFilter.md)
 - [NewsArticleListDataFilterCategories](docs/NewsArticleListDataFilterCategories.md)
 - [NewsArticleListDataFilterDistributor](docs/NewsArticleListDataFilterDistributor.md)
 - [NewsArticleListDataFilterLanguage](docs/NewsArticleListDataFilterLanguage.md)
 - [NewsArticleListDataFilterPublisher](docs/NewsArticleListDataFilterPublisher.md)
 - [NewsArticleListDataFilterRange](docs/NewsArticleListDataFilterRange.md)
 - [NewsArticleListDataFilterRegions](docs/NewsArticleListDataFilterRegions.md)
 - [NewsArticleListDataFilterTypes](docs/NewsArticleListDataFilterTypes.md)
 - [NewsArticleListMeta](docs/NewsArticleListMeta.md)
 - [NewsArticleListMetaPagination](docs/NewsArticleListMetaPagination.md)
 - [NewsArticleListMetaSubscription](docs/NewsArticleListMetaSubscription.md)
 - [NewsArticleSearchByTextData](docs/NewsArticleSearchByTextData.md)
 - [NewsArticleSearchByTextDataCategories](docs/NewsArticleSearchByTextDataCategories.md)
 - [NewsArticleSearchByTextDataCriteria](docs/NewsArticleSearchByTextDataCriteria.md)
 - [NewsArticleSearchByTextDataDistributor](docs/NewsArticleSearchByTextDataDistributor.md)
 - [NewsArticleSearchByTextDataIndices](docs/NewsArticleSearchByTextDataIndices.md)
 - [NewsArticleSearchByTextDataInstruments](docs/NewsArticleSearchByTextDataInstruments.md)
 - [NewsArticleSearchByTextDataLanguage](docs/NewsArticleSearchByTextDataLanguage.md)
 - [NewsArticleSearchByTextDataPublisher](docs/NewsArticleSearchByTextDataPublisher.md)
 - [NewsArticleSearchByTextDataRegions](docs/NewsArticleSearchByTextDataRegions.md)
 - [NewsArticleSearchByTextDataText](docs/NewsArticleSearchByTextDataText.md)
 - [NewsArticleSearchByTextDataTextCriteria](docs/NewsArticleSearchByTextDataTextCriteria.md)
 - [NewsArticleSearchByTextDataTypes](docs/NewsArticleSearchByTextDataTypes.md)
 - [NewsPublisherSearchByNameData](docs/NewsPublisherSearchByNameData.md)
 - [NewsPublisherSearchByNameDataFilter](docs/NewsPublisherSearchByNameDataFilter.md)
 - [NewsPublisherSearchByNameDataFilterDelivery](docs/NewsPublisherSearchByNameDataFilterDelivery.md)
 - [NewsPublisherSearchByNameDataFilterDistributor](docs/NewsPublisherSearchByNameDataFilterDistributor.md)
 - [NewsPublisherSearchByNameMeta](docs/NewsPublisherSearchByNameMeta.md)
 - [OffsetBasedPaginationOutputObject](docs/OffsetBasedPaginationOutputObject.md)
 - [OffsetBasedPaginationOutputObjectWithoutTotal](docs/OffsetBasedPaginationOutputObjectWithoutTotal.md)
 - [PartialOutputObject](docs/PartialOutputObject.md)
 - [StatusObject](docs/StatusObject.md)


## Documentation For Authorization


## FactSetApiKey

- **Type**: HTTP basic authentication


## FactSetOAuth2

- **Type**: OAuth
- **Flow**: application
- **Authorization URL**: 
- **Scopes**: N/A


## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in fds.sdk.NewsAPIforDigitalPortals.apis and fds.sdk.NewsAPIforDigitalPortals.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from fds.sdk.NewsAPIforDigitalPortals.api.default_api import DefaultApi`
- `from fds.sdk.NewsAPIforDigitalPortals.model.pet import Pet`

Solution 2:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import fds.sdk.NewsAPIforDigitalPortals
from fds.sdk.NewsAPIforDigitalPortals.apis import *
from fds.sdk.NewsAPIforDigitalPortals.models import *
```

## Contributing

Please refer to the [contributing guide](../../../../CONTRIBUTING.md).

## Copyright

Copyright 2022 FactSet Research Systems Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



