Metadata-Version: 2.1
Name: fds.sdk.PriceAlertingAPIforDigitalPortals
Version: 0.10.0
Summary: Price Alerting API for Digital Portals client library for Python
Home-page: https://github.com/FactSet/enterprise-sdk/tree/main/code/python/PriceAlertingAPIforDigitalPortals/v2
Author: FactSet Research Systems
License: Apache-2.0
Keywords: FactSet,API,SDK
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: urllib3 (>=1.25.3)
Requires-Dist: python-dateutil
Requires-Dist: fds.sdk.utils (>=1.0.0)

<img alt="FactSet" src="https://www.factset.com/hubfs/Assets/images/factset-logo.svg" height="56" width="290">

# Price Alerting API for Digital Portals client library for Python

[![PyPi](https://img.shields.io/pypi/v/fds.sdk.PriceAlertingAPIforDigitalPortals)](https://pypi.org/project/fds.sdk.PriceAlertingAPIforDigitalPortals/)
[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: v1
- Package version: 0.10.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements

* Python >= 3.6

## Installation

### Poetry

```shell
poetry add fds.sdk.utils fds.sdk.PriceAlertingAPIforDigitalPortals
```

### pip

```shell
pip install fds.sdk.utils fds.sdk.PriceAlertingAPIforDigitalPortals
```

## Usage

1. [Generate authentication credentials](../../../../README.md#authentication).
2. Setup Python environment.
   1. Install and activate python 3.6+. If you're using [pyenv](https://github.com/pyenv/pyenv):

      ```sh
      pyenv install 3.9.7
      pyenv shell 3.9.7
      ```

   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).
3. [Install dependencies](#installation).
4. Run the following:

```python

from fds.sdk.utils.authentication import ConfidentialClient
import fds.sdk.PriceAlertingAPIforDigitalPortals
from fds.sdk.PriceAlertingAPIforDigitalPortals.api import alerting_api
from fds.sdk.PriceAlertingAPIforDigitalPortals.model.inline_object import InlineObject
from fds.sdk.PriceAlertingAPIforDigitalPortals.model.inline_response200 import InlineResponse200
from fds.sdk.PriceAlertingAPIforDigitalPortals.model.inline_response2001 import InlineResponse2001
from fds.sdk.PriceAlertingAPIforDigitalPortals.model.inline_response2002 import InlineResponse2002
from fds.sdk.PriceAlertingAPIforDigitalPortals.model.inline_response2003 import InlineResponse2003
from pprint import pprint

# See configuration.py for a list of all supported configuration parameters.

# Examples for each supported authentication method are below,
# choose one that satisfies your use case.

# (Preferred) OAuth 2.0: FactSetOAuth2
# See https://github.com/FactSet/enterprise-sdk#oauth-20
# for information on how to create the app-config.json file
# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication
# for more information on using the ConfidentialClient class
configuration = fds.sdk.PriceAlertingAPIforDigitalPortals.Configuration(
    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')
)

# Basic authentication: FactSetApiKey
# See https://github.com/FactSet/enterprise-sdk#api-key
# for information how to create an API key
# configuration = fds.sdk.PriceAlertingAPIforDigitalPortals.Configuration(
#     username='USERNAME-SERIAL',
#     password='API-KEY'
# )

# Enter a context with an instance of the API client
with fds.sdk.PriceAlertingAPIforDigitalPortals.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = alerting_api.AlertingApi(api_client)
    id = "id_example" # str | Identifier of the alert.
    attributes = [
        "_attributes_example",
    ] # [str] | Limit the attributes returned in the response to the specified set. (optional)

    # Get response
    try:
        # Details of an alert.
        api_response = api_instance.get_alerting_prices_basic_alert_get(id, attributes=attributes)
        pprint(api_response)
    except fds.sdk.PriceAlertingAPIforDigitalPortals.ApiException as e:
        print("Exception when calling AlertingApi->get_alerting_prices_basic_alert_get: %s\n" % e)

    # Get response, http status code and response headers
    # try:
    #     # Details of an alert.
    #     api_response, http_status_code, response_headers = api_instance.get_alerting_prices_basic_alert_get_with_http_info(id, attributes=attributes)
    #     pprint(api_response)
    #     pprint(http_status_code)
    #     pprint(response_headers)
    # except fds.sdk.PriceAlertingAPIforDigitalPortals.ApiException as e:
    #     print("Exception when calling AlertingApi->get_alerting_prices_basic_alert_get: %s\n" % e)

    # Get response asynchronous
    # try:
    #     # Details of an alert.
    #     async_result = api_instance.get_alerting_prices_basic_alert_get_async(id, attributes=attributes)
    #     api_response = async_result.get()
    #     pprint(api_response)
    # except fds.sdk.PriceAlertingAPIforDigitalPortals.ApiException as e:
    #     print("Exception when calling AlertingApi->get_alerting_prices_basic_alert_get: %s\n" % e)

    # Get response, http status code and response headers asynchronous
    # try:
    #     # Details of an alert.
    #     async_result = api_instance.get_alerting_prices_basic_alert_get_with_http_info_async(id, attributes=attributes)
    #     api_response, http_status_code, response_headers = async_result.get()
    #     pprint(api_response)
    #     pprint(http_status_code)
    #     pprint(response_headers)
    # except fds.sdk.PriceAlertingAPIforDigitalPortals.ApiException as e:
    #     print("Exception when calling AlertingApi->get_alerting_prices_basic_alert_get: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.factset.com/wealth/v1*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*AlertingApi* | [**get_alerting_prices_basic_alert_get**](docs/AlertingApi.md#get_alerting_prices_basic_alert_get) | **GET** /alerting/prices/basic/alert/get | Details of an alert.
*AlertingApi* | [**get_alerting_prices_basic_alert_list**](docs/AlertingApi.md#get_alerting_prices_basic_alert_list) | **GET** /alerting/prices/basic/alert/list | List of alerts.
*AlertingApi* | [**get_alerting_prices_basic_trigger_get**](docs/AlertingApi.md#get_alerting_prices_basic_trigger_get) | **GET** /alerting/prices/basic/trigger/get | Details of a trigger.
*AlertingApi* | [**post_alerting_prices_basic_trigger_list**](docs/AlertingApi.md#post_alerting_prices_basic_trigger_list) | **POST** /alerting/prices/basic/trigger/list | List of triggers.


## Documentation For Models

 - [AlertingPricesBasicTriggerListData](docs/AlertingPricesBasicTriggerListData.md)
 - [AlertingPricesBasicTriggerListDataFilter](docs/AlertingPricesBasicTriggerListDataFilter.md)
 - [AlertingPricesBasicTriggerListDataFilterStatus](docs/AlertingPricesBasicTriggerListDataFilterStatus.md)
 - [AlertingPricesBasicTriggerListMeta](docs/AlertingPricesBasicTriggerListMeta.md)
 - [AlertingPricesBasicTriggerListMetaPagination](docs/AlertingPricesBasicTriggerListMetaPagination.md)
 - [AttributesMember](docs/AttributesMember.md)
 - [CursorBasedPaginationOutputObject](docs/CursorBasedPaginationOutputObject.md)
 - [CursorBasedPaginationOutputObjectWithoutTotal](docs/CursorBasedPaginationOutputObjectWithoutTotal.md)
 - [ErrorMetaObject](docs/ErrorMetaObject.md)
 - [ErrorObject](docs/ErrorObject.md)
 - [InlineObject](docs/InlineObject.md)
 - [InlineResponse200](docs/InlineResponse200.md)
 - [InlineResponse2001](docs/InlineResponse2001.md)
 - [InlineResponse2001Data](docs/InlineResponse2001Data.md)
 - [InlineResponse2001Meta](docs/InlineResponse2001Meta.md)
 - [InlineResponse2001Trigger](docs/InlineResponse2001Trigger.md)
 - [InlineResponse2001TriggerPrice](docs/InlineResponse2001TriggerPrice.md)
 - [InlineResponse2001TriggerStatus](docs/InlineResponse2001TriggerStatus.md)
 - [InlineResponse2002](docs/InlineResponse2002.md)
 - [InlineResponse2002Data](docs/InlineResponse2002Data.md)
 - [InlineResponse2003](docs/InlineResponse2003.md)
 - [InlineResponse2003Data](docs/InlineResponse2003Data.md)
 - [InlineResponse2003Range](docs/InlineResponse2003Range.md)
 - [InlineResponse200Data](docs/InlineResponse200Data.md)
 - [InlineResponse200DataPrice](docs/InlineResponse200DataPrice.md)
 - [InlineResponse200DataTrigger](docs/InlineResponse200DataTrigger.md)
 - [InlineResponse200DataTriggerNotation](docs/InlineResponse200DataTriggerNotation.md)
 - [InlineResponse200DataTriggerPrice](docs/InlineResponse200DataTriggerPrice.md)
 - [InlineResponse200DataTriggerRange](docs/InlineResponse200DataTriggerRange.md)
 - [InlineResponse200DataTriggerStatus](docs/InlineResponse200DataTriggerStatus.md)
 - [InlineResponse200Meta](docs/InlineResponse200Meta.md)
 - [LanguageMember](docs/LanguageMember.md)
 - [OffsetBasedPaginationOutputObject](docs/OffsetBasedPaginationOutputObject.md)
 - [OffsetBasedPaginationOutputObjectWithoutTotal](docs/OffsetBasedPaginationOutputObjectWithoutTotal.md)
 - [PartialOutputObject](docs/PartialOutputObject.md)
 - [StatusObject](docs/StatusObject.md)


## Documentation For Authorization


## FactSetApiKey

- **Type**: HTTP basic authentication


## FactSetOAuth2

- **Type**: OAuth
- **Flow**: application
- **Authorization URL**: 
- **Scopes**: N/A


## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in fds.sdk.PriceAlertingAPIforDigitalPortals.apis and fds.sdk.PriceAlertingAPIforDigitalPortals.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from fds.sdk.PriceAlertingAPIforDigitalPortals.api.default_api import DefaultApi`
- `from fds.sdk.PriceAlertingAPIforDigitalPortals.model.pet import Pet`

Solution 2:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import fds.sdk.PriceAlertingAPIforDigitalPortals
from fds.sdk.PriceAlertingAPIforDigitalPortals.apis import *
from fds.sdk.PriceAlertingAPIforDigitalPortals.models import *
```

## Contributing

Please refer to the [contributing guide](../../../../CONTRIBUTING.md).

## Copyright

Copyright 2022 FactSet Research Systems Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



