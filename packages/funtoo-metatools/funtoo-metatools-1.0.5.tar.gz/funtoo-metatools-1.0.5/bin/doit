#!/usr/bin/env python3

import argparse
import sys
from datetime import timedelta

from subpop.hub import Hub

from metatools.config.autogen import AutogenConfig


class DoItHub(Hub):
	@property
	def pkgtools(self):
		return globals()["pkgtools"]


hub = DoItHub()

import dyne.org.funtoo.metatools.pkgtools as pkgtools

CLI_CONFIG = {
	"immediate": {"default": False, "action": "store_true", "help": "Never cache HTTP(s) fetches (default 15 mins)"},
	"fastpull_scope": {"default": "local", "action": "store", "help": "Default index into fastpull for collecting artifacts."},
	"debug": {"default": False, "action": "store_true"},
	"fixups_url": {"default": "https://code.funtoo.org/bitbucket/scm/core/kit-fixups.git", "action": "store", "help": "kit-fixups URL to use for cloning (for generators)"},
	"fixups_branch": {"default": "master", "action": "store", "help": "kit-fixups branch to use for cloning (for generators)"},
	"fast": {"default": False, "action": "store_true", "help": "Skip updating kit-fixups repo (assume this has been done for us, and it's ready to go."},
}

def parse_args():
	ap = argparse.ArgumentParser()
	for arg, kwargs in CLI_CONFIG.items():
		if "os" in kwargs:
			del kwargs["os"]
		ap.add_argument("--" + arg, **kwargs)
	return ap.parse_args()


async def main_thread():
	hub.OPT = parse_args()
	kwargs = {
		"debug": hub.OPT.debug,
		"fixups_url": hub.OPT.fixups_url,
		"fixups_branch": hub.OPT.fixups_branch,
		"fast": hub.OPT.fast
	}
	for arg in set(CLI_CONFIG.keys()) - {"immediate"}:
		kwargs[arg] = getattr(hub.OPT, arg)
	if hub.OPT.immediate:
		kwargs['fetch_cache_interval'] = timedelta(seconds=0)
	await pkgtools.launch(AutogenConfig, **kwargs)
	return await pkgtools.autogen.start()


if __name__ == "__main__":
	success = hub.LOOP.run_until_complete(main_thread())
	if not success:
		sys.exit(1)

# TODO: add after-action report (listing any failures.)
# TODO: add 'facts' database concept to allow more resiliency on failures (fall back to cached facts from last
#       successful run)

# vim: ts=4 sw=4 noet
