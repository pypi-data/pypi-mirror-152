dist: focal
language: python

matrix:
    include:
        - python: '2.7'
          dist: bionic
          env:
            - COVERAGE="true"

        - python: '3.7'
          env:

        - python: '3.8'
          env:

        - python: '3.9'
          env:
            - COVERAGE="true"
            - MATPLOTLIB="true"
            - SYMPY="true"
            - SCIPY="true"

        - python: '3.10'
          env:
            - CYTHON="true" # numpy source build

        - python: '3.11-dev'
          env:
            - CYTHON="true" # numpy source build
            - DILL="master"
            - KLEPTO="master"

        - python: 'pypy2.7-7.3.1' # most recent
          dist: xenial
          env:

        - python: 'pypy3.7-7.3.5' # most recent
          dist: bionic
          env:

    allow_failures:
        - python: '2.7'
        - python: 'pypy2.7-7.3.1'
        - python: '3.11-dev'
    fast_finish: true

cache:
    pip: true

before_install:
    - set -e  # fail on any error
    - if [[ $COVERAGE == "true" ]]; then pip install coverage; fi
    - if [[ $MATPLOTLIB == "true" ]]; then pip install matplotlib; fi
    - if [[ $SYMPY == "true" ]]; then pip install sympy; fi
    - if [[ $SCIPY == "true" ]]; then pip install scipy; fi
    - if [[ $CYTHON == "true" ]]; then pip install "cython<0.29.25"; fi #FIXME
    - if [[ $DILL == "master" ]]; then pip install "https://github.com/uqfoundation/dill/archive/master.tar.gz"; fi
    - if [[ $KLEPTO == "master" ]]; then pip install "https://github.com/uqfoundation/klepto/archive/master.tar.gz"; fi


install:
    - python -m pip install .

script:
    - for test in tests/__init__.py; do echo $test ; if [[ $COVERAGE == "true" ]]; then coverage run -a $test > /dev/null; else python $test > /dev/null; fi ; done
    - for test in tests/test_*.py; do echo $test ; if [[ $COVERAGE == "true" ]]; then coverage run -a $test > /dev/null; else python $test > /dev/null; fi ; done

after_success:
    - if [[ $COVERAGE == "true" ]]; then bash <(curl -s https://codecov.io/bash); else echo ''; fi
    - if [[ $COVERAGE == "true" ]]; then coverage report; fi
