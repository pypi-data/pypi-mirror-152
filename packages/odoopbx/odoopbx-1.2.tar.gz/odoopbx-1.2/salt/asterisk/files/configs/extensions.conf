[general]
static=yes
writeprotect=yes
clearglobalvars=no

[globals]
odoo_url=http://odoo:8069
dial_timeout_trunk=300 ; a reasonable maximum to avoid hanged dial-outs.
dial_timeout_users=45
dialopts_trunk=U(callee-routine)
default_trunk=demotrunk
demotrunk_default_callerid=37311222333
demotrunk_prefix=
demotrunk_dialopts= ;r(ring)
anothersiptrunk_default_callerid=37311333444

[dids]
exten => 37311222333,1,GoSub(dids_routine,1(${EXTEN}))
 same => n,GoSub(users,101,1(return))
 same => n,GoSub(users,102,1)
 same => n,Hangup()
exten => dids_routine,1,Set(CALLERID(num)=${REPLACE(CALLERID(num),+,)})
 same => n,GoSub(features,set_curl_opts,1)
 same => n,NoOp(GET ${odoo_url}/asterisk_plus/get_caller_name?number=${CALLERID(num)})
 same => n,Set(CALLERID(name)=${CURL(${odoo_url}/asterisk_plus/get_caller_name?number=${CALLERID(num)})})
 same => n,MSet(redirect_reason=${REDIRECTING(reason)},redirect_from=${REDIRECTING(from-num)})
 same => n,ExecIf(${redirect_from}?Set(redirect_from=${REPLACE(redirect_from,+)}))
 same => n,ExecIf($["${redirect_reason}" != "unknown"]?Set(CALLERID(name)=${redirect_reason}${redirect_from}))
 same => n,Return

[users]
exten => _XXX,1,Set(ring_dev=${HINT(${EXTEN}@from-internal)})
 same => n,Set(JITTERBUFFER(adaptive)=400,,50)
 same => n,Set(ring_endpoint=${CUT(ring_dev,/,2)})
 same => n,Set(dialopts_chan=htU(callee-routine))
 same => n,Set(CDR(dnid)=${EXTEN})
 same => n,GoSub(features,monitor,1)
 same => n,NoOp(${ring_endpoint} contacts: ${PJSIP_DIAL_CONTACTS(${ring_endpoint})})
 same => n,GotoIf($["${PJSIP_DIAL_CONTACTS(${ring_endpoint})}" != ""]?dial:fw_check)
 same => n(dial),Dial(${ring_dev},${dial_timeout_users},${dialopts_chan}${dialopts_user})
 same => n,NoOp(DIALSTATUS=${DIALSTATUS} HANGUP_CAUSE=${HANGUP_CAUSE} DIALEDTIME=${DIALEDTIME} ANSWEREDTIME=${ANSWEREDTIME})
 same => n(fw_check),Set(forwarded_number=${DB(fw/${EXTEN})})
 same => n,GoToIf(${forwarded_number}?:fw_end)
 same => n,GoToIf($["${forwarded_number}" = "${redirect_from}"]?fw_end) ;prevent loops :)
 same => n,Set(dial_timeout_trunk=40)
 same => n,GoSub(from-internal,${forwarded_number},1(this_is_fwd_call))
 same => n,NoOp(DIALSTATUS=${DIALSTATUS} HANGUP_CAUSE=${HANGUP_CAUSE} DIALEDTIME=${DIALEDTIME} ANSWEREDTIME=${ANSWEREDTIME})
 same => n(fw_end),ExecIf(${ARG1}?Return)
 same => n,Hangup()

[trunkdial]
exten => _X.,100(trunkdial),GoSub(features,monitor,1)
 same => n,Set(JITTERBUFFER(adaptive)=400,,50)
 same => n,Set(trunk_prefix=${${trunk_name}_prefix})
 same => n,Set(dialopts_trunk=${dialopts_trunk}${${trunk_name}_dialopts})
 same => n,NoOp(CallerID is ${CALLERID(num)})
 same => n,ExecIf(${${trunk_name}_default_callerid}?Set(CALLERID(all)="" <${${trunk_name}_default_callerid}>))
 same => n,NoOp(channel's external_callerid is ${external_callerid})
 same => n,ExecIf(${external_callerid}?Set(CALLERID(all)="" <${external_callerid}>))
 same => n,Dial(PJSIP/${trunk_prefix}${EXTEN}@${trunk_name},${dial_timeout_trunk},${dialopts_chan}${dialopts_user}${dialopts_trunk})
 same => n,NoOp(DIALSTATUS=${DIALSTATUS} HANGUP_CAUSE=${HANGUP_CAUSE} DIALEDTIME=${DIALEDTIME} ANSWEREDTIME=${ANSWEREDTIME})
 same => n,ExecIf(${ARG1}?Return)
 same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy)
 same => n+1(busy),Playtones(busy)
 same => n,Wait(4)

[features]
exten => 500,1,Goto(menu,500,1)
exten => monitor,1,ExecIf(${MIXMONITOR_FILENAME}?Return) ;return if already monitored
 same => n,Set(path=${STRFTIME(,,%Y/%m/%d)}/from_${CALLERID(num)}_to_${EXTEN}_${STRFTIME(,,%H_%M)})
 same => n,MixMonitor(${path}.wav)
 same => n,Return()
exten => set_curl_opts,1,Set(CURLOPT(conntimeout)=3)
 same => n,Set(CURLOPT(dnstimeout)=3)
 same => n,Set(CURLOPT(httptimeout)=3)
 same => n,Set(CURLOPT(ssl_verifypeer)=0)
 same => n,Return

[outbound-rules] ; rules for converting to E.164 format
exten => _+.,1,Goto(${EXTEN:1},1) ; remove "+" prefix
exten => _0NXXXXXXX,1,Goto(373${EXTEN:1},1) ;shortcut for Moldova numbers
exten => _0ZXXXXXXXXXX!,1,Set(trunk_name=anothersiptrunk) ; a different trunk if dialed with prefix 0
 same => n,Goto(${EXTEN:1},trunkdial)

[outbound-international]
exten => _33XXXXXXXXX,1,Set(trunk_name=anothersiptrunk) ; a different trunk for France
exten => _ZXXXXXXXXX,1,Set(trunk_name=${default_trunk}) ;10 digits E.164
exten => _ZXXXXXXXXXX,1,Set(trunk_name=${default_trunk}) ;11 digits E.164
exten => _ZXXXXXXXXXXX,1,Set(trunk_name=${default_trunk}) ;12 digits E.164
exten => _ZXXXXXXXXXXXX,1,Set(trunk_name=${default_trunk}) ;13 digits E.164
exten => _ZXXXXXXXXXXXXX,1,Set(trunk_name=${default_trunk}) ;14 digits E.164
; priority 2 must match all extensions from above
exten => _ZXXXXXXXX.,2,Goto(trunkdial)

[menu]
exten => _X.,1,Answer
     same => n,Wait(0.5)
     same => n,Background(yourcallisimpotent)
     same => n,Background(this-call-may-be-monitored-or-recorded)
     same => n,Background(vm-enter-num-to-call)
     same => n,Background(or)
     same => n,Background(privacy-please-stay-on-line-to-be-connected)
     same => n,WaitExten(5)
     same => n,Queue(default)

[callee-routine]
exten => s,1,Set(JITTERBUFFER(adaptive)=400,,50)
 same => n,Return()

[from-internal]
include => odoo-hints ;extensions_odoo.conf
include => features
include => users
include => outbound-rules
include => dids
include => outbound-international
include => trunkdial

#tryinclude extensions_odoo.conf
#tryinclude extensions.conf.d/*.conf
