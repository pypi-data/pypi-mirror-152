{"version":3,"sources":["VTKStreamlit.tsx","index.tsx"],"names":["VTKStreamlit","renderData","useStreamlit","viewerRef","useRef","sceneRef","clearRef","React","useState","viewerState","setViewerState","actionStackRef","undefined","file","setFile","dispatchActionStack","useCallback","current","dispatch","length","findIndex","a","type","handleScreenshot","actions","reverse","filter","action","i","array","ids","debouncedDispatch","debounce","maxWait","useEffect","args","currFile","isequal","loadFile","config","scene","Blob","toolbar","useMemo","sider","cssStyle","height","includes","Streamlit","setFrameHeight","parseInt","replace","border","borderRadius","setComponentValue","style","backgroundColor","width","display","flexDirection","Content","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7481030e.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef } from \"react\"\n\nimport { Streamlit } from \"streamlit-component-lib\"\nimport { useStreamlit } from \"streamlit-component-lib-react-hooks\"\n\nimport { VTKViewer, VTKViewerDrawer, VTKFloatingToolbar } from \"lavender-vtkjs\"\n\nimport { Layout } from \"antd\"\n\nimport './VTKStreamlit.css'\n\nimport isequal from \"lodash.isequal\"\nimport debounce from \"lodash.debounce\"\n\nconst VTKStreamlit: React.FunctionComponent = () => {\n  // \"props\" aka args coming from Streamlit\n  const renderData = useStreamlit()\n\n  // viewerRef contains the reference to the vtkjs viewer api\n  const viewerRef = useRef<any>(null)\n  // maintain reference to scene state\n  const sceneRef = useRef<any[]>()\n  const clearRef = useRef<boolean>(true)\n\n  // state returned to streamlit\n  const [viewerState, setViewerState] = React.useState<any>({})\n\n  // stack of actions to dispatch via vtkjs\n  const actionStackRef = useRef<any[]>([])\n\n  // file to be loaded\n  const [file, setFile] = React.useState<Uint8Array | undefined>(undefined)\n\n  // designed to be able to aggreate and dispatch actions on a debounced interval\n  // implemented as a standalone function at this point\n  const dispatchActionStack = useCallback(() => {\n    if (viewerRef.current && viewerRef.current.dispatch &&\n      actionStackRef.current && actionStackRef.current.length > 0) {\n\n      // handles screenshot as a special case\n      const screenshotIndex = actionStackRef.current.findIndex(a => a.type === \"streamlit-screenshot\")\n      if (screenshotIndex !== -1) handleScreenshot()\n\n      // filters type === \"strealit-screenshot\", and actions with duplicate types\n      // any action with ids [] will be dispatched\n      const actions = [...actionStackRef.current].reverse()\n        .filter((action, i, array) =>\n          (action.type !== \"streamlit-screenshot\" &&\n            typeof action.ids !== 'undefined') ||\n          array.findIndex(a => a.type === action.type) === i\n        )\n\n      viewerRef.current.dispatch(actions)\n      actionStackRef.current = []\n    }\n  }, [])\n\n  const debouncedDispatch = useCallback(debounce(dispatchActionStack, 250, { maxWait: 750 }), [dispatchActionStack])\n\n  useEffect(() => {\n    if (renderData && typeof renderData.args[\"clear\"] !== undefined) {\n      clearRef.current = renderData.args[\"clear\"]\n    }\n  }, [renderData])\n\n  useEffect(() => {\n    if (renderData && typeof renderData.args[\"action_stack\"] !== undefined\n      && viewerRef.current && viewerRef.current.dispatch) {\n      actionStackRef.current = [\n        ...actionStackRef.current,\n        ...renderData.args[\"action_stack\"]\n      ]\n      if (actionStackRef.current.length > 0) {\n        debouncedDispatch()\n      }\n    }\n  }, [renderData, debouncedDispatch])\n\n  useEffect(() => {\n    if (renderData && renderData.args[\"file\"]) {\n      setFile(currFile => {\n        if (!currFile) return renderData.args[\"file\"]\n        const equal = isequal(renderData.args[\"file\"], currFile)\n        return equal ? currFile : renderData.args[\"file\"]\n      })\n    }\n  }, [renderData])\n\n  useEffect(() => {\n    if (!file) return\n    loadFile(file)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file])\n\n  const loadFile = useCallback((file: Uint8Array) => {\n    if (viewerRef.current && viewerRef.current.dispatch && viewerRef.current.loadFile) {\n      if (clearRef.current) viewerRef.current.dispatch({ type: 'remove-all' }, true)\n      const config = viewerState.scene.length > 0 ? viewerState : undefined\n      viewerRef.current.loadFile(new Blob([file]), 'vtkjs', config)\n    }\n  }, [viewerState])\n\n  // defaults to true\n  const toolbar = useMemo(() => {\n    if (renderData && typeof renderData.args[\"toolbar\"] !== 'undefined') {\n      return renderData.args[\"toolbar\"]\n    }\n    else {\n      return true\n    }\n  }, [renderData])\n\n  // defaults to true\n  const sider = useMemo(() => {\n    if (renderData && typeof renderData.args[\"sider\"] !== 'undefined') {\n      return renderData.args[\"sider\"]\n    }\n    else {\n      return true\n    }\n  }, [renderData])\n\n  const cssStyle = useMemo(() => {\n    if (renderData && typeof renderData.args[\"style\"] !== 'undefined') {\n      if (renderData.args[\"style\"].height && renderData.args[\"style\"].height.includes('px')) {\n        Streamlit.setFrameHeight(parseInt(renderData.args[\"style\"].height.replace('px', '')))\n      }\n      return renderData.args[\"style\"]\n    }\n    else {\n      return { border: \"1px solid #d0d7de\", borderRadius: \"2px\" }\n    }\n  }, [renderData])\n\n  // initial state of streamlit component\n  useEffect(() => {\n    Streamlit.setComponentValue({})\n  }, [])\n\n  useEffect(() => {\n    // update if we're subscribed\n    // this is camera and everything else\n    if (renderData && renderData.args[\"subscribe\"]) {\n      Streamlit.setComponentValue(viewerState)\n    } else if (viewerState.scene && viewerState.scene.length > 0) {\n      const scene = [...viewerState.scene]\n\n      if (isequal(scene, sceneRef.current)) return\n      sceneRef.current = scene\n\n      Streamlit.setComponentValue({\n        scene\n      })\n    }\n  }, [viewerState, renderData])\n\n  const handleScreenshot = () => {\n    if (!viewerRef.current) return\n    viewerRef.current.handleScreenshot('VTKJSStreamlit', false)\n  }\n\n  if (renderData == null) {\n    return (\n      <div style={{\n        height: \"400px\",\n        border: \"1px solid #d0d7de\",\n        borderRadius: \"2px\",\n        backgroundColor: \"#f0f2f5\",\n      }} />\n    )\n  }\n\n  return (\n    <div style={{ width: '100%', height: '100%', border: \"1px solid #d0d7de\", borderRadius: \"2px\", ...cssStyle, display: 'flex' }}>\n      <Layout style={{ flexDirection: 'row' }}>\n        {sider &&\n          <VTKViewerDrawer dispatch={viewerRef.current?.dispatch} viewerState={viewerState} handleScreenshot={handleScreenshot} />\n        }\n        <Layout>\n          {toolbar &&\n            <VTKFloatingToolbar dispatch={viewerRef.current?.dispatch} viewerState={viewerState} handleScreenshot={handleScreenshot} />\n          }\n          <Layout.Content style={{ display: 'flex', flexDirection: 'column' }}>\n            <VTKViewer setViewerState={setViewerState} ref={viewerRef} />\n          </Layout.Content>\n        </Layout>\n      </Layout>\n    </div>\n  )\n}\n\nexport default VTKStreamlit","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ErrorBoundary } from \"streamlit-component-lib-react-hooks\"\nimport VTKStreamlit from \"./VTKStreamlit\"\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <VTKStreamlit />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}