[tox]
envlist =
    py{38,39,310}{,-oldestdeps,-devdeps,-online}
    build_docs
    codestyle
    conda
requires =
    setuptools >=56, !=61.0.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# Run the tests in a temporary directory to make sure that we don't import
# sunpy from the source tree
changedir = .tmp/{envname}
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    HIDE_PARFIVE_PROGESS = True
    PYTEST_COMMAND = pytest -vvv -s -ra --pyargs radiospectra --cov-report=xml --cov=radiospectra --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    devdeps,build_docs,online: HOME = {envtmpdir}
    SUNPY_SAMPLEDIR = {env:SUNPY_SAMPLEDIR:{toxinidir}/.tox/{envname}/sample_data/}
passenv =
    HTTP_PROXY
    HTTPS_PROXY
    NO_PROXY
    CIRCLECI
deps =
    # We need this for some packages.
    setuptools
    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist
    # Since xdist uses stdout in order for it to work, we have to bypass this and use to
    # capture any logging we might put in a test for debugging.
    pytest-logger
    # The devdeps factor is intended to be used to install the latest developer version.
    # of key dependencies.
    devdeps: git+https://github.com/sunpy/sunpy
    devdeps: matplotlib
    devdeps: scipy
    # Oldest deps we pin against.
    oldestdeps: sunpy<4.1
    # These are specific online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout
# The following indicates which extras_require from setup.cfg will be installed
# dev is special in that it installs everything
extras =
    dev
commands =
    !online-!hypothesis-!figure: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --reruns 2 --timeout=180 --remote-data=any {posargs}

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras =
    dev
commands =
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --verbose --all-files --show-diff-on-failure

# This env requires tox-conda.
[testenv:py39-conda]
pypi_filter =
basepython = python3.9
extras =
deps =
conda_deps =
    pytest
    pytest-astropy
    pytest-cov
    pytest-mock
    pytest-xdist
    sunpy
conda_channels = conda-forge
install_command = pip install --no-deps {opts} {packages}
commands =
    conda list
    {env:PYTEST_COMMAND} {posargs}
