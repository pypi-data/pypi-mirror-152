name: testing

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        python-version: 3.9
        activate-environment: foo

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        conda install -c conda-forge graph-tool
        pip install -r requirements.txt
        pip install -r requirements-testing.txt
        pip install -r requirements-optional.txt
        pip install -e .

    - name: Lint with mypy
      run: |
        mypy src/rxn_network

    - name: Lint with pycodestyle
      run: |
        pycodestyle src/rxn_network

    - name: Lint with pylint
      run: |
        pylint src/rxn_network

    - name: Lint with black
      run: |
        black --check --diff --color src/rxn_network

    - name: Lint with flake8
      run: |
        flake8 --count --show-source --statistics src/rxn_network
        flake8 --count --exit-zero --max-complexity=20 --statistics src/rxn_network

  test:
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8, 3.9]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        python-version: ${{ matrix.python-version }}
        activate-environment: foo

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        conda install -c conda-forge graph-tool
        pip install -r requirements.txt
        pip install -r requirements-optional.txt
        pip install -r requirements-testing.txt
        pip install -e .

    - name: Test with pytest
      run: |
        pytest --cov=src/rxn_network --cov-report=xml

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
  
  docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        python-version: 3.9
        activate-environment: foo

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        conda install -c conda-forge graph-tool
        pip install -r requirements.txt
        pip install -r requirements-optional.txt
        pip install -r requirements-docs.txt
        pip install -e .

    - name: Build docs
      run: mkdocs build