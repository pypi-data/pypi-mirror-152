
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "TemplateleftORleftANDleftNOTnonassocEQNEGTGELTLEISINISNOTNOTINleftADDSUBleftMULDIVFDIVRMDleftPOWrightUMINUSUPLUSleftCSADD AND CE CS DIV DOT ELIF ELSE ENDFOR ENDIF ENDREPEAT EQ FALSE FDIV FOR GE GT IF IN IS ISNOT LE LT MUL NE NOT NOTIN OE OR OS PIPE POW REPEAT RMD SUB TRUE float id int str textTemplate : errorExpression : OE error CEIf : OS IF error CS Elems OS ENDIF CSIf : OS IF error CS Elems OS ELSE CS Elems OS ENDIF CSIf : OS IF error CS Elems Elifs OS ENDIF CSTemplate : ElemsIf : OS IF error CS Elems Elifs OS ELSE CS Elems OS ENDIF CSElems : Elems ElemElif : OS ELIF error CS ElemsElems :Elem : textFor : OS FOR error IN id CS Elems OS ENDFOR CSElem : CodeFor : OS FOR error ',' id IN id CS Elems OS ENDFOR CSCode : ExpressionCode : StatementExpression : OE Exp CEStatement : IfStatement : ForStatement : RepeatIf : OS IF Exp CS Elems OS ENDIF CSIf : OS IF Exp CS Elems OS ELSE CS Elems OS ENDIF CSIf : OS IF Exp CS Elems Elifs OS ENDIF CSIf : OS IF Exp CS Elems Elifs OS ELSE CS Elems OS ENDIF CSElifs : Elifs ElifElifs : ElifElif : OS ELIF Exp CS ElemsFor : OS FOR id IN id CS Elems OS ENDFOR CSFor : OS FOR id ',' id IN id CS Elems OS ENDFOR CSRepeat : OS REPEAT Exp CS Elems OS ENDREPEAT CSExp : idExp : LiteralExp : AExp\n    Exp : RExp\n    Exp : LExp\n    Exp : OExpExp : '(' Exp ')'Literal : strLiteral : NumLiteral : BoolLiteral : '[' List ']'List : List ',' ExpList : ExpList :Num : intNum : floatBool : TRUEBool : FALSEAExp : Exp ADD Exp\n    | Exp SUB Exp\n    | Exp MUL Exp\n    | Exp DIV Exp\n    | Exp FDIV Exp\n    | Exp RMD Exp\n    | Exp POW ExpAExp : SUB Exp %prec UMINUSAExp : ADD Exp %prec UPLUSRExp : Exp EQ Exp\n    | Exp NE Exp\n    | Exp GT Exp\n    | Exp GE Exp\n    | Exp LT Exp\n    | Exp LE Exp\n    | Exp IS id\n    | Exp IN ExpRExp : Exp ISNOT idRExp : Exp NOTIN ExpLExp : NOT ExpLExp : Exp AND ExpLExp : Exp OR ExpOExp : Exp PIPE idOExp : Exp DOT idOExp : Exp '[' Exp ']'OExp : Exp DOT id '(' Args ')'Args : Args ',' ExpArgs : ExpArgs :"
    
_lr_action_items = {'error':([0,9,34,35,130,],[2,14,67,69,144,]),'text':([0,3,4,5,6,7,8,10,11,12,37,38,97,98,103,107,108,113,121,123,136,138,142,143,148,149,153,155,156,157,158,159,160,161,162,163,164,166,168,170,171,172,174,175,177,185,187,189,190,191,192,],[-10,5,-8,-11,-13,-15,-16,-18,-19,-20,-2,-17,-10,-10,-10,5,5,5,-10,-10,5,5,-3,-10,-21,-10,-10,-10,-30,5,-10,-10,-5,-10,5,-23,-10,5,5,5,5,5,5,-12,-28,-4,-22,-14,-29,-7,-24,]),'OE':([0,3,4,5,6,7,8,10,11,12,37,38,97,98,103,107,108,113,121,123,136,138,142,143,148,149,153,155,156,157,158,159,160,161,162,163,164,166,168,170,171,172,174,175,177,185,187,189,190,191,192,],[-10,9,-8,-11,-13,-15,-16,-18,-19,-20,-2,-17,-10,-10,-10,9,9,9,-10,-10,9,9,-3,-10,-21,-10,-10,-10,-30,9,-10,-10,-5,-10,9,-23,-10,9,9,9,9,9,9,-12,-28,-4,-22,-14,-29,-7,-24,]),'OS':([0,3,4,5,6,7,8,10,11,12,37,38,97,98,103,107,108,113,117,118,120,121,123,132,136,138,142,143,148,149,153,155,156,157,158,159,160,161,162,163,164,166,168,170,171,172,174,175,177,185,187,189,190,191,192,],[-10,13,-8,-11,-13,-15,-16,-18,-19,-20,-2,-17,-10,-10,-10,116,119,125,131,-26,135,-10,-10,-25,152,154,-3,-10,-21,-10,-10,-10,-30,169,-10,-10,-5,-10,173,-23,-10,176,178,-9,-27,180,182,-12,-28,-4,-22,-14,-29,-7,-24,]),'$end':([0,1,2,3,4,5,6,7,8,10,11,12,37,38,142,148,156,160,163,175,177,185,187,189,190,191,192,],[-10,0,-1,-6,-8,-11,-13,-15,-16,-18,-19,-20,-2,-17,-3,-21,-30,-5,-23,-12,-28,-4,-22,-14,-29,-7,-24,]),'id':([9,22,26,27,28,29,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,96,99,100,101,102,104,122,124,127,130,],[16,16,16,16,16,16,16,70,16,16,16,16,16,16,16,16,16,16,16,16,16,16,85,16,87,16,16,16,91,92,16,16,109,110,111,112,16,137,139,16,16,]),'(':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,92,96,104,127,130,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,104,22,22,22,22,]),'str':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'[':([9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,106,114,126,127,130,141,145,],[26,60,-31,-32,-33,-34,-35,-36,26,-38,-39,-40,26,26,26,26,-45,-46,-47,-48,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,60,60,-57,-56,-68,60,60,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,60,-37,-41,26,26,-73,60,60,-74,26,26,60,60,]),'SUB':([9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,106,114,126,127,130,141,145,],[28,40,-31,-32,-33,-34,-35,-36,28,-38,-39,-40,28,28,28,28,-45,-46,-47,-48,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,40,40,-57,-56,40,40,40,-49,-50,-51,-52,-53,-54,-55,40,40,40,40,40,40,-64,40,-66,40,40,40,-71,-72,40,-37,-41,28,28,-73,40,40,-74,28,28,40,40,]),'ADD':([9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,105,106,114,126,127,130,141,145,],[27,39,-31,-32,-33,-34,-35,-36,27,-38,-39,-40,27,27,27,27,-45,-46,-47,-48,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,39,39,-57,-56,39,39,39,-49,-50,-51,-52,-53,-54,-55,39,39,39,39,39,39,-64,39,-66,39,39,39,-71,-72,39,-37,-41,27,27,-73,39,39,-74,27,27,39,39,]),'NOT':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'int':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'float':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TRUE':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FALSE':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'IF':([13,116,119,125,152,154,169,173,176,178,180,182,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'FOR':([13,116,119,125,152,154,169,173,176,178,180,182,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'REPEAT':([13,116,119,125,152,154,169,173,176,178,180,182,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'CE':([14,15,16,17,18,19,20,21,23,24,25,30,31,32,33,64,65,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,105,126,],[37,38,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,-57,-56,-68,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,-37,-41,-73,-74,]),'MUL':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[41,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,41,41,-57,-56,41,41,41,41,41,-51,-52,-53,-54,-55,41,41,41,41,41,41,-64,41,-66,41,41,41,-71,-72,41,-37,-41,-73,41,41,-74,41,41,]),'DIV':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[42,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,42,42,-57,-56,42,42,42,42,42,-51,-52,-53,-54,-55,42,42,42,42,42,42,-64,42,-66,42,42,42,-71,-72,42,-37,-41,-73,42,42,-74,42,42,]),'FDIV':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[43,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,43,43,-57,-56,43,43,43,43,43,-51,-52,-53,-54,-55,43,43,43,43,43,43,-64,43,-66,43,43,43,-71,-72,43,-37,-41,-73,43,43,-74,43,43,]),'RMD':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[44,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,44,44,-57,-56,44,44,44,44,44,-51,-52,-53,-54,-55,44,44,44,44,44,44,-64,44,-66,44,44,44,-71,-72,44,-37,-41,-73,44,44,-74,44,44,]),'POW':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[45,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,45,45,-57,-56,45,45,45,45,45,45,45,45,45,-55,45,45,45,45,45,45,-64,45,-66,45,45,45,-71,-72,45,-37,-41,-73,45,45,-74,45,45,]),'EQ':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[46,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,46,46,-57,-56,46,46,46,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,46,46,-71,-72,46,-37,-41,-73,46,46,-74,46,46,]),'NE':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[47,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,47,47,-57,-56,47,47,47,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,47,47,-71,-72,47,-37,-41,-73,47,47,-74,47,47,]),'GT':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[48,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,48,48,-57,-56,48,48,48,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,48,48,-71,-72,48,-37,-41,-73,48,48,-74,48,48,]),'GE':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[49,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,49,49,-57,-56,49,49,49,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,49,49,-71,-72,49,-37,-41,-73,49,49,-74,49,49,]),'LT':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[50,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,50,50,-57,-56,50,50,50,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,50,50,-71,-72,50,-37,-41,-73,50,50,-74,50,50,]),'LE':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[51,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,51,51,-57,-56,51,51,51,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,51,51,-71,-72,51,-37,-41,-73,51,51,-74,51,51,]),'IS':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[52,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,52,52,-57,-56,52,52,52,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,52,52,-71,-72,52,-37,-41,-73,52,52,-74,52,52,]),'IN':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,110,112,114,126,141,145,],[53,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,53,53,-57,-56,53,53,99,101,53,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,53,53,-71,-72,53,-37,-41,-73,53,122,124,53,-74,53,53,]),'ISNOT':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[54,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,54,54,-57,-56,54,54,54,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,54,54,-71,-72,54,-37,-41,-73,54,54,-74,54,54,]),'NOTIN':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[55,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,55,55,-57,-56,55,55,55,-49,-50,-51,-52,-53,-54,-55,None,None,None,None,None,None,-64,None,-66,None,55,55,-71,-72,55,-37,-41,-73,55,55,-74,55,55,]),'AND':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[56,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,56,56,-57,-56,-68,56,56,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,56,-71,-72,56,-37,-41,-73,56,56,-74,56,56,]),'OR':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[57,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,57,57,-57,-56,-68,57,57,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,57,-37,-41,-73,57,57,-74,57,57,]),'PIPE':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[58,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,58,58,-57,-56,-68,58,58,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,58,-37,-41,-73,58,58,-74,58,58,]),'DOT':([15,16,17,18,19,20,21,23,24,25,30,31,32,33,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,114,126,141,145,],[59,-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,59,59,-57,-56,-68,59,59,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,59,-37,-41,-73,59,59,-74,59,59,]),')':([16,17,18,19,20,21,23,24,25,30,31,32,33,61,64,65,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,104,105,114,115,126,141,],[-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,94,-57,-56,-68,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,-37,-41,-77,-73,-76,126,-74,-75,]),']':([16,17,18,19,20,21,23,24,25,26,30,31,32,33,62,63,64,65,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,126,],[-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-45,-46,-47,-48,95,-43,-57,-56,-68,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,105,-37,-41,-73,-42,-74,]),',':([16,17,18,19,20,21,23,24,25,26,30,31,32,33,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,104,105,106,114,115,126,141,],[-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-45,-46,-47,-48,96,-43,-57,-56,-68,100,102,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,-37,-41,-77,-73,-42,-76,127,-74,-75,]),'CS':([16,17,18,19,20,21,23,24,25,30,31,32,33,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,105,109,111,126,128,129,133,134,137,139,140,144,145,146,147,150,151,165,167,179,181,183,184,186,188,],[-31,-32,-33,-34,-35,-36,-38,-39,-40,-45,-46,-47,-48,-57,-56,-68,97,98,103,-49,-50,-51,-52,-53,-54,-55,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-70,-71,-72,-37,-41,-73,121,123,-74,142,143,148,149,153,155,156,158,159,160,161,163,164,175,177,185,187,189,190,191,192,]),'ENDIF':([116,119,131,135,169,173,180,182,],[128,133,146,150,179,181,186,188,]),'ELSE':([116,119,131,135,],[129,134,147,151,]),'ELIF':([116,119,131,135,],[130,130,130,130,]),'ENDREPEAT':([125,],[140,]),'ENDFOR':([152,154,176,178,],[165,167,183,184,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Template':([0,],[1,]),'Elems':([0,97,98,103,121,123,143,149,153,155,158,159,161,164,],[3,107,108,113,136,138,157,162,166,168,170,171,172,174,]),'Elem':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Code':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'Expression':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'Statement':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'If':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'For':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Repeat':([3,107,108,113,136,138,157,162,166,168,170,171,172,174,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'Exp':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[15,61,63,64,65,66,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,90,93,106,114,141,145,]),'Literal':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'AExp':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'RExp':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LExp':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'OExp':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'Num':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'Bool':([9,22,26,27,28,29,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,60,96,104,127,130,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'List':([26,],[62,]),'Args':([104,],[115,]),'Elifs':([107,108,],[117,120,]),'Elif':([107,108,117,120,],[118,118,132,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Template","S'",1,None,None,None),
  ('Template -> error','Template',1,'p_Template_error','parser_error.py',5),
  ('Expression -> OE error CE','Expression',3,'p_Expression_error','parser_error.py',11),
  ('If -> OS IF error CS Elems OS ENDIF CS','If',8,'p_If_error','parser_error.py',17),
  ('If -> OS IF error CS Elems OS ELSE CS Elems OS ENDIF CS','If',12,'p_If_else_error','parser_error.py',23),
  ('If -> OS IF error CS Elems Elifs OS ENDIF CS','If',9,'p_If_elifs_error','parser_error.py',29),
  ('Template -> Elems','Template',1,'p_Template','parser.py',32),
  ('If -> OS IF error CS Elems Elifs OS ELSE CS Elems OS ENDIF CS','If',13,'p_If_elifs_else_error','parser_error.py',35),
  ('Elems -> Elems Elem','Elems',2,'p_Elems_multiple','parser.py',37),
  ('Elif -> OS ELIF error CS Elems','Elif',5,'p_Elif_error','parser_error.py',41),
  ('Elems -> <empty>','Elems',0,'p_Elems_single','parser.py',42),
  ('Elem -> text','Elem',1,'p_Elem_TEXT','parser.py',47),
  ('For -> OS FOR error IN id CS Elems OS ENDFOR CS','For',10,'p_For_error','parser_error.py',47),
  ('Elem -> Code','Elem',1,'p_Elem_Code','parser.py',52),
  ('For -> OS FOR error , id IN id CS Elems OS ENDFOR CS','For',12,'p_For_dict_error','parser_error.py',53),
  ('Code -> Expression','Code',1,'p_Code_Expression','parser.py',57),
  ('Code -> Statement','Code',1,'p_Code_Statement','parser.py',62),
  ('Expression -> OE Exp CE','Expression',3,'p_Expression','parser.py',67),
  ('Statement -> If','Statement',1,'p_Statement_If','parser.py',72),
  ('Statement -> For','Statement',1,'p_Statement_For','parser.py',77),
  ('Statement -> Repeat','Statement',1,'p_Statement_Repeat','parser.py',82),
  ('If -> OS IF Exp CS Elems OS ENDIF CS','If',8,'p_If','parser.py',87),
  ('If -> OS IF Exp CS Elems OS ELSE CS Elems OS ENDIF CS','If',12,'p_If_else','parser.py',92),
  ('If -> OS IF Exp CS Elems Elifs OS ENDIF CS','If',9,'p_If_elifs','parser.py',97),
  ('If -> OS IF Exp CS Elems Elifs OS ELSE CS Elems OS ENDIF CS','If',13,'p_If_elifs_else','parser.py',102),
  ('Elifs -> Elifs Elif','Elifs',2,'p_Elifs_multiple','parser.py',107),
  ('Elifs -> Elif','Elifs',1,'p_Elifs_single','parser.py',112),
  ('Elif -> OS ELIF Exp CS Elems','Elif',5,'p_Elif','parser.py',117),
  ('For -> OS FOR id IN id CS Elems OS ENDFOR CS','For',10,'p_For','parser.py',122),
  ('For -> OS FOR id , id IN id CS Elems OS ENDFOR CS','For',12,'p_For_dict','parser.py',127),
  ('Repeat -> OS REPEAT Exp CS Elems OS ENDREPEAT CS','Repeat',8,'p_Repeat','parser.py',132),
  ('Exp -> id','Exp',1,'p_Exp_id','parser.py',137),
  ('Exp -> Literal','Exp',1,'p_Exp_Literal','parser.py',142),
  ('Exp -> AExp','Exp',1,'p_Exp_types','parser.py',147),
  ('Exp -> RExp','Exp',1,'p_Exp_types','parser.py',148),
  ('Exp -> LExp','Exp',1,'p_Exp_types','parser.py',149),
  ('Exp -> OExp','Exp',1,'p_Exp_types','parser.py',150),
  ('Exp -> ( Exp )','Exp',3,'p_Exp_braces','parser.py',155),
  ('Literal -> str','Literal',1,'p_Literal_str','parser.py',160),
  ('Literal -> Num','Literal',1,'p_Literal_Num','parser.py',165),
  ('Literal -> Bool','Literal',1,'p_Literal_Bool','parser.py',170),
  ('Literal -> [ List ]','Literal',3,'p_Literal_List','parser.py',175),
  ('List -> List , Exp','List',3,'p_List_multiple','parser.py',180),
  ('List -> Exp','List',1,'p_List_single','parser.py',185),
  ('List -> <empty>','List',0,'p_List_empty','parser.py',190),
  ('Num -> int','Num',1,'p_Num_int','parser.py',195),
  ('Num -> float','Num',1,'p_Num_float','parser.py',200),
  ('Bool -> TRUE','Bool',1,'p_Bool_TRUE','parser.py',205),
  ('Bool -> FALSE','Bool',1,'p_Bool_FALSE','parser.py',210),
  ('AExp -> Exp ADD Exp','AExp',3,'p_AExp_bin','parser.py',215),
  ('AExp -> Exp SUB Exp','AExp',3,'p_AExp_bin','parser.py',216),
  ('AExp -> Exp MUL Exp','AExp',3,'p_AExp_bin','parser.py',217),
  ('AExp -> Exp DIV Exp','AExp',3,'p_AExp_bin','parser.py',218),
  ('AExp -> Exp FDIV Exp','AExp',3,'p_AExp_bin','parser.py',219),
  ('AExp -> Exp RMD Exp','AExp',3,'p_AExp_bin','parser.py',220),
  ('AExp -> Exp POW Exp','AExp',3,'p_AExp_bin','parser.py',221),
  ('AExp -> SUB Exp','AExp',2,'p_AExp_UMINUS','parser.py',226),
  ('AExp -> ADD Exp','AExp',2,'p_AExp_UPLUS','parser.py',231),
  ('RExp -> Exp EQ Exp','RExp',3,'p_RExp_bin','parser.py',236),
  ('RExp -> Exp NE Exp','RExp',3,'p_RExp_bin','parser.py',237),
  ('RExp -> Exp GT Exp','RExp',3,'p_RExp_bin','parser.py',238),
  ('RExp -> Exp GE Exp','RExp',3,'p_RExp_bin','parser.py',239),
  ('RExp -> Exp LT Exp','RExp',3,'p_RExp_bin','parser.py',240),
  ('RExp -> Exp LE Exp','RExp',3,'p_RExp_bin','parser.py',241),
  ('RExp -> Exp IS id','RExp',3,'p_RExp_bin','parser.py',242),
  ('RExp -> Exp IN Exp','RExp',3,'p_RExp_bin','parser.py',243),
  ('RExp -> Exp ISNOT id','RExp',3,'p_RExp_NOTIN','parser.py',248),
  ('RExp -> Exp NOTIN Exp','RExp',3,'p_RExp_ISNOT','parser.py',253),
  ('LExp -> NOT Exp','LExp',2,'p_LExp_NOT','parser.py',258),
  ('LExp -> Exp AND Exp','LExp',3,'p_LExp_AND','parser.py',263),
  ('LExp -> Exp OR Exp','LExp',3,'p_LExp_OR','parser.py',268),
  ('OExp -> Exp PIPE id','OExp',3,'p_OExp_filter','parser.py',273),
  ('OExp -> Exp DOT id','OExp',3,'p_OExp_attr','parser.py',278),
  ('OExp -> Exp [ Exp ]','OExp',4,'p_OExp_item','parser.py',283),
  ('OExp -> Exp DOT id ( Args )','OExp',6,'p_OExp_method','parser.py',288),
  ('Args -> Args , Exp','Args',3,'p_Args_multiple','parser.py',293),
  ('Args -> Exp','Args',1,'p_Args_single','parser.py',298),
  ('Args -> <empty>','Args',0,'p_Args_empty','parser.py',303),
]
